openapi: 3.0.1
info:
  title: CLARIN Component Registry
  version: 1.0.0
servers:
- url: https://catalog.clarin.eu/ds/ComponentRegistry/rest
tags:
- name: registry
- name: groups
- name: items
- name: authentication
paths:
  /allowedTypes:
    get:
      operationId: getAllowedAttributeTypes
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AllowedAttributetypesXML'
            application/xml:
              schema:
                $ref: '#/components/schemas/AllowedAttributetypesXML'
            application/json:
              schema:
                $ref: '#/components/schemas/AllowedAttributetypesXML'
          description: successful operation
      summary: A listing of values that are allowed as element or attribute type by
        the CMDI schema
      x-accepts:
      - application/json
      - application/xml
      - text/xml
  /registry/components/{componentId}/comments/{commentId}:
    delete:
      operationId: deleteCommentFromComponent
      parameters:
      - in: path
        name: cmdVersion
        required: true
        schema:
          default: "1.1"
          type: string
      - in: path
        name: componentId
        required: true
        schema:
          type: string
      - in: path
        name: commentId
        required: true
        schema:
          type: string
      responses:
        "401":
          content: {}
          description: User is not authenticated
        "403":
          content: {}
          description: Comment is not owned by current user and user is no administrator
        "404":
          content: {}
          description: Comment does not exist
      summary: Deletes a comment from a component
      tags:
      - registry
      x-accepts:
      - application/json
    get:
      operationId: getSpecifiedCommentFromComponent
      parameters:
      - in: path
        name: cmdVersion
        required: true
        schema:
          default: "1.1"
          type: string
      - in: path
        name: componentId
        required: true
        schema:
          type: string
      - in: path
        name: commentId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/Comment'
            application/xml:
              schema:
                $ref: '#/components/schemas/Comment'
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: successful operation
        "401":
          content: {}
          description: Component requires authorisation and user is not authenticated
        "403":
          content: {}
          description: Non-public component is not owned by current user
        "404":
          content: {}
          description: Component or comment does not exist
      summary: Returns a single comment on a component
      tags:
      - registry
      x-accepts:
      - application/json
      - application/xml
      - text/xml
    post:
      operationId: manipulateCommentFromComponent
      parameters:
      - in: path
        name: cmdVersion
        required: true
        schema:
          default: "1.1"
          type: string
      - in: path
        name: componentId
        required: true
        schema:
          type: string
      - in: path
        name: commentId
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/manipulateCommentFromComponent_request'
      responses:
        default:
          content: {}
          description: successful operation
      summary: Allows for deletion of single component comment (workaround for Flex
        which does not support the DELETE method)
      tags:
      - registry
      x-content-type: multipart/form-data
      x-accepts:
      - application/json
  /registry/profiles/{profileId}:
    delete:
      operationId: deleteRegisteredProfile
      parameters:
      - in: path
        name: cmdVersion
        required: true
        schema:
          default: "1.1"
          type: string
      - in: path
        name: profileId
        required: true
        schema:
          type: string
      responses:
        "401":
          content: {}
          description: User is not authenticated
        "403":
          content: {}
          description: Non-public item is not owned by current user and user is no
            administrator
        "404":
          content: {}
          description: Item does not exist
      summary: Deletes the profile with the specified ID from its registry
      tags:
      - registry
      x-accepts:
      - application/json
    get:
      operationId: getRegisteredProfile
      parameters:
      - in: path
        name: cmdVersion
        required: true
        schema:
          default: "1.1"
          type: string
      - in: path
        name: profileId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ComponentSpec'
            application/xml:
              schema:
                $ref: '#/components/schemas/ComponentSpec'
            application/json:
              schema:
                $ref: '#/components/schemas/ComponentSpec'
          description: The component specification for the identified profile
        "401":
          content: {}
          description: Item requires authorisation and user is not authenticated
        "403":
          content: {}
          description: Non-public item is not owned by current user
        "404":
          content: {}
          description: Item does not exist
      summary: The component specification of a single profile
      tags:
      - registry
      x-accepts:
      - application/json
      - application/xml
      - text/xml
    post:
      operationId: manipulateRegisteredProfile
      parameters:
      - in: path
        name: cmdVersion
        required: true
        schema:
          default: "1.1"
          type: string
      - in: path
        name: profileId
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/manipulateCommentFromComponent_request'
      responses:
        default:
          content: {}
          description: successful operation
      summary: Allows for deletion of single profile (workaround for Flex which does
        not support the DELETE method)
      tags:
      - registry
      x-content-type: multipart/form-data
      x-accepts:
      - application/json
  /registry/profiles/{profileId}/comments/{commentId}:
    delete:
      operationId: deleteCommentFromProfile
      parameters:
      - in: path
        name: cmdVersion
        required: true
        schema:
          default: "1.1"
          type: string
      - in: path
        name: profileId
        required: true
        schema:
          type: string
      - in: path
        name: commentId
        required: true
        schema:
          type: string
      responses:
        "401":
          content: {}
          description: User is not authenticated
        "403":
          content: {}
          description: Comment is not owned by current user and user is no administrator
        "404":
          content: {}
          description: Comment does not exist
      summary: Deletes a comment from a profile
      tags:
      - registry
      x-accepts:
      - application/json
    get:
      operationId: getSpecifiedCommentFromProfile
      parameters:
      - in: path
        name: cmdVersion
        required: true
        schema:
          default: "1.1"
          type: string
      - in: path
        name: profileId
        required: true
        schema:
          type: string
      - in: path
        name: commentId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/Comment'
            application/xml:
              schema:
                $ref: '#/components/schemas/Comment'
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: successful operation
        "401":
          content: {}
          description: Component requires authorisation and user is not authenticated
        "403":
          content: {}
          description: Non-public component is not owned by current user
        "404":
          content: {}
          description: Component or comment does not exist
      summary: Returns a single comment on a profile
      tags:
      - registry
      x-accepts:
      - application/json
      - application/xml
      - text/xml
    post:
      operationId: manipulateCommentFromProfile
      parameters:
      - in: path
        name: cmdVersion
        required: true
        schema:
          default: "1.1"
          type: string
      - in: path
        name: profileId
        required: true
        schema:
          type: string
      - in: path
        name: commentId
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/manipulateCommentFromComponent_request'
      responses:
        default:
          content: {}
          description: successful operation
      summary: Allows for deletion of single profile comment (workaround for Flex
        which does not support the DELETE method)
      tags:
      - registry
      x-content-type: multipart/form-data
      x-accepts:
      - application/json
  /registry/components/{componentId}:
    delete:
      operationId: deleteRegisteredComponent
      parameters:
      - in: path
        name: cmdVersion
        required: true
        schema:
          default: "1.1"
          type: string
      - in: path
        name: componentId
        required: true
        schema:
          type: string
      responses:
        "401":
          content: {}
          description: User is not authenticated
        "403":
          content: {}
          description: Non-public item is not owned by current user and user is no
            administrator
        "404":
          content: {}
          description: Item does not exist
      summary: Deletes the component with the specified ID from its registry
      tags:
      - registry
      x-accepts:
      - application/json
    get:
      operationId: getRegisteredComponent
      parameters:
      - in: path
        name: cmdVersion
        required: true
        schema:
          default: "1.1"
          type: string
      - in: path
        name: componentId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ComponentSpec'
            application/xml:
              schema:
                $ref: '#/components/schemas/ComponentSpec'
            application/json:
              schema:
                $ref: '#/components/schemas/ComponentSpec'
          description: The component specification for the identified component
        "401":
          content: {}
          description: Item requires authorisation and user is not authenticated
        "403":
          content: {}
          description: Non-public item is not owned by current user
        "404":
          content: {}
          description: Item does not exist
      summary: The component specification of a single component
      tags:
      - registry
      x-accepts:
      - application/json
      - application/xml
      - text/xml
    post:
      operationId: manipulateRegisteredComponent
      parameters:
      - in: path
        name: cmdVersion
        required: true
        schema:
          default: "1.1"
          type: string
      - in: path
        name: componentId
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/manipulateCommentFromComponent_request'
      responses:
        default:
          content: {}
          description: successful operation
      summary: Allows for deletion of single component (workaround for Flex which
        does not support the DELETE method)
      tags:
      - registry
      x-content-type: multipart/form-data
      x-accepts:
      - application/json
  /registry/components:
    get:
      operationId: getRegisteredComponents
      parameters:
      - in: path
        name: cmdVersion
        required: true
        schema:
          default: "1.1"
          type: string
      - in: query
        name: registrySpace
        schema:
          default: published
          type: string
      - in: query
        name: groupId
        schema:
          type: string
      - explode: true
        in: query
        name: status
        schema:
          items:
            type: string
          type: array
        style: form
      - in: query
        name: userspace
        schema:
          type: string
      responses:
        "200":
          content:
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ComponentDescription'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ComponentDescription'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ComponentDescription'
                type: array
          description: successful operation
        "401":
          content: {}
          description: Registry requires authorisation and user is not authenticated
        "403":
          content: {}
          description: Non-public registry is not owned by current user
        "404":
          content: {}
          description: Registry space does not exist
      summary: A listing of the descriptions of components in the specified registry
        space
      tags:
      - registry
      x-accepts:
      - application/json
      - application/xml
      - text/xml
    post:
      operationId: registerComponent
      parameters:
      - in: path
        name: cmdVersion
        required: true
        schema:
          default: "1.1"
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/registerComponent_request'
      responses:
        "401":
          content: {}
          description: User is not authenticated
        "403":
          content: {}
          description: Current user has no access
      summary: Registers a component specification (data content) with the associated
        metadata (form content) in the user's private space
      tags:
      - registry
      x-content-type: multipart/form-data
      x-accepts:
      - application/json
  /registry/components/{componentId}/{rawType}:
    get:
      operationId: getRegisteredComponentRawType
      parameters:
      - in: path
        name: cmdVersion
        required: true
        schema:
          default: "1.1"
          type: string
      - in: path
        name: componentId
        required: true
        schema:
          type: string
      - in: path
        name: rawType
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ComponentSpec'
            application/xml:
              schema:
                $ref: '#/components/schemas/ComponentSpec'
          description: The component specification for the identified profile
        "404":
          content: {}
          description: Item does not exist
      summary: The expanded XML or XSD represenation of the component specification
        of a single component (publicly accessible regardless of state!)
      tags:
      - registry
      x-accepts:
      - application/xml
      - text/xml
  /registry/components/{componentId}/comments:
    get:
      operationId: getCommentsFromComponent
      parameters:
      - in: path
        name: cmdVersion
        required: true
        schema:
          default: "1.1"
          type: string
      - in: path
        name: componentId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Comment'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Comment'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Comment'
                type: array
          description: successful operation
        "401":
          content: {}
          description: Item requires authorisation and user is not authenticated
        "403":
          content: {}
          description: Non-public item is not owned by current user and user is no
            administrator
        "404":
          content: {}
          description: Item does not exist
      summary: Returns a listing of all comments that have been made on the identified
        component
      tags:
      - registry
      x-accepts:
      - application/json
      - application/xml
      - text/xml
    post:
      operationId: registerCommentInComponent
      parameters:
      - in: path
        name: cmdVersion
        required: true
        schema:
          default: "1.1"
          type: string
      - in: path
        name: componentId
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/registerCommentInComponent_request'
      responses:
        "401":
          content: {}
          description: User is not authenticated
        "403":
          content: {}
          description: Non-public item is not owned by current user
        "404":
          content: {}
          description: Item does not exist
      summary: Publishes a comment on the specified component
      tags:
      - registry
      x-content-type: multipart/form-data
      x-accepts:
      - application/json
  /registry/profiles/{profileId}/publish:
    post:
      operationId: publishRegisteredProfile
      parameters:
      - in: path
        name: cmdVersion
        required: true
        schema:
          default: "1.1"
          type: string
      - in: path
        name: profileId
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/registerComponent_request'
      responses:
        "401":
          content: {}
          description: Item requires authorisation and user is not authenticated
        "403":
          content: {}
          description: Item is not owned by current user
        "404":
          content: {}
          description: Item does not exist
      summary: Changes the state of the specified profile to published
      tags:
      - registry
      x-content-type: multipart/form-data
      x-accepts:
      - application/json
  /registry/profiles/{profileId}/update:
    post:
      operationId: updateRegisteredProfile
      parameters:
      - in: path
        name: cmdVersion
        required: true
        schema:
          default: "1.1"
          type: string
      - in: path
        name: profileId
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/registerComponent_request'
      responses:
        "401":
          content: {}
          description: User is not authenticated
        "403":
          content: {}
          description: Item is not owned by current user
        "404":
          content: {}
          description: Item does not exist
      summary: Updates an already registered (but unpublished) profile
      tags:
      - registry
      x-content-type: multipart/form-data
      x-accepts:
      - application/json
  /registry/components/{componentId}/publish:
    post:
      operationId: publishRegisteredComponent
      parameters:
      - in: path
        name: cmdVersion
        required: true
        schema:
          default: "1.1"
          type: string
      - in: path
        name: componentId
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/registerComponent_request'
      responses:
        "401":
          content: {}
          description: Item requires authorisation and user is not authenticated
        "403":
          content: {}
          description: Item is not owned by current user
        "404":
          content: {}
          description: Item does not exist
      summary: Changes the state of the specified component to published
      tags:
      - registry
      x-content-type: multipart/form-data
      x-accepts:
      - application/json
  /registry/components/{componentId}/update:
    post:
      operationId: updateRegisteredComponent
      parameters:
      - in: path
        name: cmdVersion
        required: true
        schema:
          default: "1.1"
          type: string
      - in: path
        name: componentId
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/registerComponent_request'
      responses:
        "401":
          content: {}
          description: User is not authenticated
        "403":
          content: {}
          description: Item is not owned by current user
        "404":
          content: {}
          description: Item does not exist
      summary: Updates an already registered (but unpublished) component
      tags:
      - registry
      x-content-type: multipart/form-data
      x-accepts:
      - application/json
  /registry/profiles/{profileId}/{targetVersion}{rawType}:
    get:
      operationId: getRegisteredProfileRawType
      parameters:
      - in: path
        name: cmdVersion
        required: true
        schema:
          default: "1.1"
          type: string
      - in: path
        name: profileId
        required: true
        schema:
          type: string
      - in: path
        name: targetVersion
        required: true
        schema:
          pattern: "([0-9]+\\.[0-9]+/)?"
          type: string
      - in: path
        name: rawType
        required: true
        schema:
          type: string
      responses:
        "404":
          content: {}
          description: Item does not exist
      summary: The expanded XML or XSD represenation of the component specification
        of a single profile (publicly accessible regardless of state!)
      tags:
      - registry
      x-accepts:
      - application/json
  /registry/components/{componentId}/successor:
    get:
      operationId: getComponentSuccessor
      parameters:
      - in: path
        name: cmdVersion
        required: true
        schema:
          default: "1.1"
          type: string
      - in: path
        name: componentId
        required: true
        schema:
          type: string
      responses:
        "401":
          content: {}
          description: User is not authenticated
        "403":
          content: {}
          description: Item is not owned by current user
        "404":
          content: {}
          description: Item does not exist (no item or no successor)
      summary: Gets the successor of a registered component
      tags:
      - registry
      x-accepts:
      - application/json
    post:
      operationId: updateComponentSuccessor
      parameters:
      - in: path
        name: cmdVersion
        required: true
        schema:
          default: "1.1"
          type: string
      - in: path
        name: componentId
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/updateComponentSuccessor_request'
      responses:
        "401":
          content: {}
          description: User is not authenticated
        "403":
          content: {}
          description: Item is not owned by current user
        "404":
          content: {}
          description: Item does not exist
      summary: Sets the successor for a registered component (must have deprecated
        status)
      tags:
      - registry
      x-content-type: multipart/form-data
      x-accepts:
      - application/json
  /registry/profiles/{profileId}/comments:
    get:
      operationId: getCommentsFromProfile
      parameters:
      - in: path
        name: cmdVersion
        required: true
        schema:
          default: "1.1"
          type: string
      - in: path
        name: profileId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Comment'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Comment'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Comment'
                type: array
          description: successful operation
        "401":
          content: {}
          description: Item requires authorisation and user is not authenticated
        "403":
          content: {}
          description: Non-public item is not owned by current user and user is no
            administrator
        "404":
          content: {}
          description: Item does not exist
      summary: Returns a listing of all comments that have been made on the identified
        profile
      tags:
      - registry
      x-accepts:
      - application/json
      - application/xml
      - text/xml
    post:
      operationId: registerCommentInProfile
      parameters:
      - in: path
        name: cmdVersion
        required: true
        schema:
          default: "1.1"
          type: string
      - in: path
        name: profileId
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/registerCommentInComponent_request'
      responses:
        "401":
          content: {}
          description: User is not authenticated
        "403":
          content: {}
          description: Non-public item is not owned by current user
        "404":
          content: {}
          description: Item does not exist
      summary: Publishes a comment on the specified profile
      tags:
      - registry
      x-content-type: multipart/form-data
      x-accepts:
      - application/json
  /registry/profiles/{profileId}/comments/rss:
    get:
      operationId: getRssOfCommentsFromProfile
      parameters:
      - in: path
        name: cmdVersion
        required: true
        schema:
          default: "1.1"
          type: string
      - in: path
        name: profileId
        required: true
        schema:
          type: string
      - in: query
        name: limit
        schema:
          default: "20"
          type: string
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/Rss'
            application/xml:
              schema:
                $ref: '#/components/schemas/Rss'
            application/json:
              schema:
                $ref: '#/components/schemas/Rss'
          description: successful operation
      tags:
      - registry
      x-accepts:
      - application/json
      - application/xml
      - text/xml
  /registry/components/{componentId}/comments/rss:
    get:
      operationId: getRssOfCommentsFromComponent
      parameters:
      - in: path
        name: cmdVersion
        required: true
        schema:
          default: "1.1"
          type: string
      - in: path
        name: componentId
        required: true
        schema:
          type: string
      - in: query
        name: limit
        schema:
          default: "20"
          type: string
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/Rss'
            application/xml:
              schema:
                $ref: '#/components/schemas/Rss'
            application/json:
              schema:
                $ref: '#/components/schemas/Rss'
          description: successful operation
      tags:
      - registry
      x-accepts:
      - application/json
      - application/xml
      - text/xml
  /registry/profilesList:
    get:
      operationId: getRegisteredProfilesObject
      parameters:
      - in: path
        name: cmdVersion
        required: true
        schema:
          default: "1.1"
          type: string
      - in: query
        name: registrySpace
        schema:
          default: published
          type: string
      - in: query
        name: mdEditor
        schema:
          default: false
          type: boolean
      - in: query
        name: groupId
        schema:
          type: string
      - explode: true
        in: query
        name: status
        schema:
          items:
            type: string
          type: array
        style: form
      - in: query
        name: userspace
        schema:
          type: string
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ProfileDescriptionsObject'
            application/xml:
              schema:
                $ref: '#/components/schemas/ProfileDescriptionsObject'
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileDescriptionsObject'
          description: successful operation
        "401":
          content: {}
          description: Registry requires authorisation and user is not authenticated
        "403":
          content: {}
          description: Non-public registry is not owned by current user
        "404":
          content: {}
          description: Registry space does not exist
      summary: A listing of the descriptions of profiles in the specified registry
        space
      tags:
      - registry
      x-accepts:
      - application/json
      - application/xml
      - text/xml
  /registry/profiles:
    get:
      operationId: getRegisteredProfiles
      parameters:
      - in: path
        name: cmdVersion
        required: true
        schema:
          default: "1.1"
          type: string
      - in: query
        name: registrySpace
        schema:
          default: published
          type: string
      - in: query
        name: mdEditor
        schema:
          default: false
          type: boolean
      - in: query
        name: groupId
        schema:
          type: string
      - explode: true
        in: query
        name: status
        schema:
          items:
            type: string
          type: array
        style: form
      - in: query
        name: userspace
        schema:
          type: string
      responses:
        "200":
          content:
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ProfileDescription'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ProfileDescription'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProfileDescription'
                type: array
          description: successful operation
        "401":
          content: {}
          description: Registry requires authorisation and user is not authenticated
        "403":
          content: {}
          description: Non-public registry is not owned by current user
        "404":
          content: {}
          description: Registry space does not exist
      summary: A listing of the descriptions of profiles in the specified registry
        space
      tags:
      - registry
      x-accepts:
      - application/json
      - application/xml
      - text/xml
    post:
      operationId: registerProfile
      parameters:
      - in: path
        name: cmdVersion
        required: true
        schema:
          default: "1.1"
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/registerComponent_request'
      responses:
        "401":
          content: {}
          description: User is not authenticated
        "403":
          content: {}
          description: Current user has no access
      summary: Registers a profile specification (data content) with the associated
        metadata (form content) in the user's private space
      tags:
      - registry
      x-content-type: multipart/form-data
      x-accepts:
      - application/json
  /registry/components/usage/{componentId}:
    get:
      operationId: getComponentUsage
      parameters:
      - in: path
        name: cmdVersion
        required: true
        schema:
          default: "1.1"
          type: string
      - in: path
        name: componentId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/BaseDescription'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/BaseDescription'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/BaseDescription'
                type: array
          description: successful operation
        "401":
          content: {}
          description: Item requires authorisation and user is not authenticated
      summary: Returns a descriptions listing of components that use the identified
        component
      tags:
      - registry
      x-accepts:
      - application/json
      - application/xml
      - text/xml
  /registry/profiles/{profileId}/status:
    get:
      operationId: getProfileStatus
      parameters:
      - in: path
        name: cmdVersion
        required: true
        schema:
          default: "1.1"
          type: string
      - in: path
        name: profileId
        required: true
        schema:
          type: string
      responses:
        "401":
          content: {}
          description: User is not authenticated
        "403":
          content: {}
          description: Item is not owned by current user
        "404":
          content: {}
          description: Item does not exist
      summary: Gets the status of a registered profile
      tags:
      - registry
      x-accepts:
      - application/json
    post:
      operationId: updateProfileStatus
      parameters:
      - in: path
        name: cmdVersion
        required: true
        schema:
          default: "1.1"
          type: string
      - in: path
        name: profileId
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/updateProfileStatus_request'
      responses:
        "401":
          content: {}
          description: User is not authenticated
        "403":
          content: {}
          description: Item is not owned by current user
        "404":
          content: {}
          description: Item does not exist
      summary: Updates the status of an already registered profile
      tags:
      - registry
      x-content-type: multipart/form-data
      x-accepts:
      - application/json
  /registry/components/{componentId}/status:
    get:
      operationId: getComponentStatus
      parameters:
      - in: path
        name: cmdVersion
        required: true
        schema:
          default: "1.1"
          type: string
      - in: path
        name: componentId
        required: true
        schema:
          type: string
      responses:
        "401":
          content: {}
          description: User is not authenticated
        "403":
          content: {}
          description: Item is not owned by current user
        "404":
          content: {}
          description: Item does not exist
      summary: Gets the status of a registered component
      tags:
      - registry
      x-accepts:
      - application/json
    post:
      operationId: updateComponentStatus
      parameters:
      - in: path
        name: cmdVersion
        required: true
        schema:
          default: "1.1"
          type: string
      - in: path
        name: componentId
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/updateProfileStatus_request'
      responses:
        "401":
          content: {}
          description: User is not authenticated
        "403":
          content: {}
          description: Item is not owned by current user
        "404":
          content: {}
          description: Item does not exist
      summary: Updates the status of an already registered component
      tags:
      - registry
      x-content-type: multipart/form-data
      x-accepts:
      - application/json
  /registry/profiles/{profileId}/successor:
    get:
      operationId: getProfileSuccessor
      parameters:
      - in: path
        name: cmdVersion
        required: true
        schema:
          default: "1.1"
          type: string
      - in: path
        name: profileId
        required: true
        schema:
          type: string
      responses:
        "401":
          content: {}
          description: User is not authenticated
        "403":
          content: {}
          description: Item is not owned by current user
        "404":
          content: {}
          description: Item does not exist (no item or no successor)
      summary: Gets the successor of a registered component
      tags:
      - registry
      x-accepts:
      - application/json
    post:
      operationId: updateProfileSuccessor
      parameters:
      - in: path
        name: cmdVersion
        required: true
        schema:
          default: "1.1"
          type: string
      - in: path
        name: profileId
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/updateComponentSuccessor_request'
      responses:
        "401":
          content: {}
          description: User is not authenticated
        "403":
          content: {}
          description: Item is not owned by current user
        "404":
          content: {}
          description: Item does not exist
      summary: Sets the successor for a registered profile (must have deprecated status)
      tags:
      - registry
      x-content-type: multipart/form-data
      x-accepts:
      - application/json
  /registry/components/rss:
    get:
      operationId: getRssComponent
      parameters:
      - in: path
        name: cmdVersion
        required: true
        schema:
          default: "1.1"
          type: string
      - in: query
        name: groupId
        schema:
          type: string
      - in: query
        name: registrySpace
        schema:
          default: published
          type: string
      - explode: true
        in: query
        name: status
        schema:
          items:
            type: string
          type: array
        style: form
      - in: query
        name: limit
        schema:
          default: "20"
          type: string
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/Rss'
            application/xml:
              schema:
                $ref: '#/components/schemas/Rss'
            application/json:
              schema:
                $ref: '#/components/schemas/Rss'
          description: successful operation
      tags:
      - registry
      x-accepts:
      - application/json
      - application/xml
      - text/xml
  /registry/pingSession:
    get:
      operationId: pingSession
      parameters:
      - in: path
        name: cmdVersion
        required: true
        schema:
          default: "1.1"
          type: string
      responses:
        default:
          content: {}
          description: successful operation
      summary: Keeps the session alive
      tags:
      - registry
      x-accepts:
      - application/json
  /registry/profiles/rss:
    get:
      operationId: getRssProfile
      parameters:
      - in: path
        name: cmdVersion
        required: true
        schema:
          default: "1.1"
          type: string
      - in: query
        name: groupId
        schema:
          type: string
      - in: query
        name: registrySpace
        schema:
          default: published
          type: string
      - explode: true
        in: query
        name: status
        schema:
          items:
            type: string
          type: array
        style: form
      - in: query
        name: limit
        schema:
          default: "20"
          type: string
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/Rss'
            application/xml:
              schema:
                $ref: '#/components/schemas/Rss'
            application/json:
              schema:
                $ref: '#/components/schemas/Rss'
          description: successful operation
      tags:
      - registry
      x-accepts:
      - application/json
      - application/xml
      - text/xml
  /registry/{cmdVersion}/components/{componentId}/comments/{commentId}:
    delete:
      operationId: deleteCommentFromComponent_1
      parameters:
      - in: path
        name: cmdVersion
        required: true
        schema:
          default: "1.1"
          type: string
      - in: path
        name: componentId
        required: true
        schema:
          type: string
      - in: path
        name: commentId
        required: true
        schema:
          type: string
      responses:
        "401":
          content: {}
          description: User is not authenticated
        "403":
          content: {}
          description: Comment is not owned by current user and user is no administrator
        "404":
          content: {}
          description: Comment does not exist
      summary: Deletes a comment from a component
      tags:
      - registry
      x-accepts:
      - application/json
    get:
      operationId: getSpecifiedCommentFromComponent_1
      parameters:
      - in: path
        name: cmdVersion
        required: true
        schema:
          default: "1.1"
          type: string
      - in: path
        name: componentId
        required: true
        schema:
          type: string
      - in: path
        name: commentId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/Comment'
            application/xml:
              schema:
                $ref: '#/components/schemas/Comment'
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: successful operation
        "401":
          content: {}
          description: Component requires authorisation and user is not authenticated
        "403":
          content: {}
          description: Non-public component is not owned by current user
        "404":
          content: {}
          description: Component or comment does not exist
      summary: Returns a single comment on a component
      tags:
      - registry
      x-accepts:
      - application/json
      - application/xml
      - text/xml
    post:
      operationId: manipulateCommentFromComponent_1
      parameters:
      - in: path
        name: cmdVersion
        required: true
        schema:
          default: "1.1"
          type: string
      - in: path
        name: componentId
        required: true
        schema:
          type: string
      - in: path
        name: commentId
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/manipulateCommentFromComponent_request'
      responses:
        default:
          content: {}
          description: successful operation
      summary: Allows for deletion of single component comment (workaround for Flex
        which does not support the DELETE method)
      tags:
      - registry
      x-content-type: multipart/form-data
      x-accepts:
      - application/json
  /registry/{cmdVersion}/profiles/{profileId}:
    delete:
      operationId: deleteRegisteredProfile_1
      parameters:
      - in: path
        name: cmdVersion
        required: true
        schema:
          default: "1.1"
          type: string
      - in: path
        name: profileId
        required: true
        schema:
          type: string
      responses:
        "401":
          content: {}
          description: User is not authenticated
        "403":
          content: {}
          description: Non-public item is not owned by current user and user is no
            administrator
        "404":
          content: {}
          description: Item does not exist
      summary: Deletes the profile with the specified ID from its registry
      tags:
      - registry
      x-accepts:
      - application/json
    get:
      operationId: getRegisteredProfile_1
      parameters:
      - in: path
        name: cmdVersion
        required: true
        schema:
          default: "1.1"
          type: string
      - in: path
        name: profileId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ComponentSpec'
            application/xml:
              schema:
                $ref: '#/components/schemas/ComponentSpec'
            application/json:
              schema:
                $ref: '#/components/schemas/ComponentSpec'
          description: The component specification for the identified profile
        "401":
          content: {}
          description: Item requires authorisation and user is not authenticated
        "403":
          content: {}
          description: Non-public item is not owned by current user
        "404":
          content: {}
          description: Item does not exist
      summary: The component specification of a single profile
      tags:
      - registry
      x-accepts:
      - application/json
      - application/xml
      - text/xml
    post:
      operationId: manipulateRegisteredProfile_1
      parameters:
      - in: path
        name: cmdVersion
        required: true
        schema:
          default: "1.1"
          type: string
      - in: path
        name: profileId
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/manipulateCommentFromComponent_request'
      responses:
        default:
          content: {}
          description: successful operation
      summary: Allows for deletion of single profile (workaround for Flex which does
        not support the DELETE method)
      tags:
      - registry
      x-content-type: multipart/form-data
      x-accepts:
      - application/json
  /registry/{cmdVersion}/profiles/{profileId}/comments/{commentId}:
    delete:
      operationId: deleteCommentFromProfile_1
      parameters:
      - in: path
        name: cmdVersion
        required: true
        schema:
          default: "1.1"
          type: string
      - in: path
        name: profileId
        required: true
        schema:
          type: string
      - in: path
        name: commentId
        required: true
        schema:
          type: string
      responses:
        "401":
          content: {}
          description: User is not authenticated
        "403":
          content: {}
          description: Comment is not owned by current user and user is no administrator
        "404":
          content: {}
          description: Comment does not exist
      summary: Deletes a comment from a profile
      tags:
      - registry
      x-accepts:
      - application/json
    get:
      operationId: getSpecifiedCommentFromProfile_1
      parameters:
      - in: path
        name: cmdVersion
        required: true
        schema:
          default: "1.1"
          type: string
      - in: path
        name: profileId
        required: true
        schema:
          type: string
      - in: path
        name: commentId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/Comment'
            application/xml:
              schema:
                $ref: '#/components/schemas/Comment'
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: successful operation
        "401":
          content: {}
          description: Component requires authorisation and user is not authenticated
        "403":
          content: {}
          description: Non-public component is not owned by current user
        "404":
          content: {}
          description: Component or comment does not exist
      summary: Returns a single comment on a profile
      tags:
      - registry
      x-accepts:
      - application/json
      - application/xml
      - text/xml
    post:
      operationId: manipulateCommentFromProfile_1
      parameters:
      - in: path
        name: cmdVersion
        required: true
        schema:
          default: "1.1"
          type: string
      - in: path
        name: profileId
        required: true
        schema:
          type: string
      - in: path
        name: commentId
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/manipulateCommentFromComponent_request'
      responses:
        default:
          content: {}
          description: successful operation
      summary: Allows for deletion of single profile comment (workaround for Flex
        which does not support the DELETE method)
      tags:
      - registry
      x-content-type: multipart/form-data
      x-accepts:
      - application/json
  /registry/{cmdVersion}/components/{componentId}:
    delete:
      operationId: deleteRegisteredComponent_1
      parameters:
      - in: path
        name: cmdVersion
        required: true
        schema:
          default: "1.1"
          type: string
      - in: path
        name: componentId
        required: true
        schema:
          type: string
      responses:
        "401":
          content: {}
          description: User is not authenticated
        "403":
          content: {}
          description: Non-public item is not owned by current user and user is no
            administrator
        "404":
          content: {}
          description: Item does not exist
      summary: Deletes the component with the specified ID from its registry
      tags:
      - registry
      x-accepts:
      - application/json
    get:
      operationId: getRegisteredComponent_1
      parameters:
      - in: path
        name: cmdVersion
        required: true
        schema:
          default: "1.1"
          type: string
      - in: path
        name: componentId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ComponentSpec'
            application/xml:
              schema:
                $ref: '#/components/schemas/ComponentSpec'
            application/json:
              schema:
                $ref: '#/components/schemas/ComponentSpec'
          description: The component specification for the identified component
        "401":
          content: {}
          description: Item requires authorisation and user is not authenticated
        "403":
          content: {}
          description: Non-public item is not owned by current user
        "404":
          content: {}
          description: Item does not exist
      summary: The component specification of a single component
      tags:
      - registry
      x-accepts:
      - application/json
      - application/xml
      - text/xml
    post:
      operationId: manipulateRegisteredComponent_1
      parameters:
      - in: path
        name: cmdVersion
        required: true
        schema:
          default: "1.1"
          type: string
      - in: path
        name: componentId
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/manipulateCommentFromComponent_request'
      responses:
        default:
          content: {}
          description: successful operation
      summary: Allows for deletion of single component (workaround for Flex which
        does not support the DELETE method)
      tags:
      - registry
      x-content-type: multipart/form-data
      x-accepts:
      - application/json
  /registry/{cmdVersion}/components:
    get:
      operationId: getRegisteredComponents_1
      parameters:
      - in: path
        name: cmdVersion
        required: true
        schema:
          default: "1.1"
          type: string
      - in: query
        name: registrySpace
        schema:
          default: published
          type: string
      - in: query
        name: groupId
        schema:
          type: string
      - explode: true
        in: query
        name: status
        schema:
          items:
            type: string
          type: array
        style: form
      - in: query
        name: userspace
        schema:
          type: string
      responses:
        "200":
          content:
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ComponentDescription'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ComponentDescription'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ComponentDescription'
                type: array
          description: successful operation
        "401":
          content: {}
          description: Registry requires authorisation and user is not authenticated
        "403":
          content: {}
          description: Non-public registry is not owned by current user
        "404":
          content: {}
          description: Registry space does not exist
      summary: A listing of the descriptions of components in the specified registry
        space
      tags:
      - registry
      x-accepts:
      - application/json
      - application/xml
      - text/xml
    post:
      operationId: registerComponent_1
      parameters:
      - in: path
        name: cmdVersion
        required: true
        schema:
          default: "1.1"
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/registerComponent_request'
      responses:
        "401":
          content: {}
          description: User is not authenticated
        "403":
          content: {}
          description: Current user has no access
      summary: Registers a component specification (data content) with the associated
        metadata (form content) in the user's private space
      tags:
      - registry
      x-content-type: multipart/form-data
      x-accepts:
      - application/json
  /registry/{cmdVersion}/components/{componentId}/{rawType}:
    get:
      operationId: getRegisteredComponentRawType_1
      parameters:
      - in: path
        name: cmdVersion
        required: true
        schema:
          default: "1.1"
          type: string
      - in: path
        name: componentId
        required: true
        schema:
          type: string
      - in: path
        name: rawType
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ComponentSpec'
            application/xml:
              schema:
                $ref: '#/components/schemas/ComponentSpec'
          description: The component specification for the identified profile
        "404":
          content: {}
          description: Item does not exist
      summary: The expanded XML or XSD represenation of the component specification
        of a single component (publicly accessible regardless of state!)
      tags:
      - registry
      x-accepts:
      - application/xml
      - text/xml
  /registry/{cmdVersion}/components/{componentId}/comments:
    get:
      operationId: getCommentsFromComponent_1
      parameters:
      - in: path
        name: cmdVersion
        required: true
        schema:
          default: "1.1"
          type: string
      - in: path
        name: componentId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Comment'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Comment'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Comment'
                type: array
          description: successful operation
        "401":
          content: {}
          description: Item requires authorisation and user is not authenticated
        "403":
          content: {}
          description: Non-public item is not owned by current user and user is no
            administrator
        "404":
          content: {}
          description: Item does not exist
      summary: Returns a listing of all comments that have been made on the identified
        component
      tags:
      - registry
      x-accepts:
      - application/json
      - application/xml
      - text/xml
    post:
      operationId: registerCommentInComponent_1
      parameters:
      - in: path
        name: cmdVersion
        required: true
        schema:
          default: "1.1"
          type: string
      - in: path
        name: componentId
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/registerCommentInComponent_request'
      responses:
        "401":
          content: {}
          description: User is not authenticated
        "403":
          content: {}
          description: Non-public item is not owned by current user
        "404":
          content: {}
          description: Item does not exist
      summary: Publishes a comment on the specified component
      tags:
      - registry
      x-content-type: multipart/form-data
      x-accepts:
      - application/json
  /registry/{cmdVersion}/profiles/{profileId}/publish:
    post:
      operationId: publishRegisteredProfile_1
      parameters:
      - in: path
        name: cmdVersion
        required: true
        schema:
          default: "1.1"
          type: string
      - in: path
        name: profileId
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/registerComponent_request'
      responses:
        "401":
          content: {}
          description: Item requires authorisation and user is not authenticated
        "403":
          content: {}
          description: Item is not owned by current user
        "404":
          content: {}
          description: Item does not exist
      summary: Changes the state of the specified profile to published
      tags:
      - registry
      x-content-type: multipart/form-data
      x-accepts:
      - application/json
  /registry/{cmdVersion}/profiles/{profileId}/update:
    post:
      operationId: updateRegisteredProfile_1
      parameters:
      - in: path
        name: cmdVersion
        required: true
        schema:
          default: "1.1"
          type: string
      - in: path
        name: profileId
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/registerComponent_request'
      responses:
        "401":
          content: {}
          description: User is not authenticated
        "403":
          content: {}
          description: Item is not owned by current user
        "404":
          content: {}
          description: Item does not exist
      summary: Updates an already registered (but unpublished) profile
      tags:
      - registry
      x-content-type: multipart/form-data
      x-accepts:
      - application/json
  /registry/{cmdVersion}/components/{componentId}/publish:
    post:
      operationId: publishRegisteredComponent_1
      parameters:
      - in: path
        name: cmdVersion
        required: true
        schema:
          default: "1.1"
          type: string
      - in: path
        name: componentId
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/registerComponent_request'
      responses:
        "401":
          content: {}
          description: Item requires authorisation and user is not authenticated
        "403":
          content: {}
          description: Item is not owned by current user
        "404":
          content: {}
          description: Item does not exist
      summary: Changes the state of the specified component to published
      tags:
      - registry
      x-content-type: multipart/form-data
      x-accepts:
      - application/json
  /registry/{cmdVersion}/components/{componentId}/update:
    post:
      operationId: updateRegisteredComponent_1
      parameters:
      - in: path
        name: cmdVersion
        required: true
        schema:
          default: "1.1"
          type: string
      - in: path
        name: componentId
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/registerComponent_request'
      responses:
        "401":
          content: {}
          description: User is not authenticated
        "403":
          content: {}
          description: Item is not owned by current user
        "404":
          content: {}
          description: Item does not exist
      summary: Updates an already registered (but unpublished) component
      tags:
      - registry
      x-content-type: multipart/form-data
      x-accepts:
      - application/json
  /registry/{cmdVersion}/profiles/{profileId}/{targetVersion}{rawType}:
    get:
      operationId: getRegisteredProfileRawType_1
      parameters:
      - in: path
        name: cmdVersion
        required: true
        schema:
          default: "1.1"
          type: string
      - in: path
        name: profileId
        required: true
        schema:
          type: string
      - in: path
        name: targetVersion
        required: true
        schema:
          pattern: "([0-9]+\\.[0-9]+/)?"
          type: string
      - in: path
        name: rawType
        required: true
        schema:
          type: string
      responses:
        "404":
          content: {}
          description: Item does not exist
      summary: The expanded XML or XSD represenation of the component specification
        of a single profile (publicly accessible regardless of state!)
      tags:
      - registry
      x-accepts:
      - application/json
  /registry/{cmdVersion}/components/{componentId}/successor:
    get:
      operationId: getComponentSuccessor_1
      parameters:
      - in: path
        name: cmdVersion
        required: true
        schema:
          default: "1.1"
          type: string
      - in: path
        name: componentId
        required: true
        schema:
          type: string
      responses:
        "401":
          content: {}
          description: User is not authenticated
        "403":
          content: {}
          description: Item is not owned by current user
        "404":
          content: {}
          description: Item does not exist (no item or no successor)
      summary: Gets the successor of a registered component
      tags:
      - registry
      x-accepts:
      - application/json
    post:
      operationId: updateComponentSuccessor_1
      parameters:
      - in: path
        name: cmdVersion
        required: true
        schema:
          default: "1.1"
          type: string
      - in: path
        name: componentId
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/updateComponentSuccessor_request'
      responses:
        "401":
          content: {}
          description: User is not authenticated
        "403":
          content: {}
          description: Item is not owned by current user
        "404":
          content: {}
          description: Item does not exist
      summary: Sets the successor for a registered component (must have deprecated
        status)
      tags:
      - registry
      x-content-type: multipart/form-data
      x-accepts:
      - application/json
  /registry/{cmdVersion}/profiles/{profileId}/comments:
    get:
      operationId: getCommentsFromProfile_1
      parameters:
      - in: path
        name: cmdVersion
        required: true
        schema:
          default: "1.1"
          type: string
      - in: path
        name: profileId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Comment'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Comment'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Comment'
                type: array
          description: successful operation
        "401":
          content: {}
          description: Item requires authorisation and user is not authenticated
        "403":
          content: {}
          description: Non-public item is not owned by current user and user is no
            administrator
        "404":
          content: {}
          description: Item does not exist
      summary: Returns a listing of all comments that have been made on the identified
        profile
      tags:
      - registry
      x-accepts:
      - application/json
      - application/xml
      - text/xml
    post:
      operationId: registerCommentInProfile_1
      parameters:
      - in: path
        name: cmdVersion
        required: true
        schema:
          default: "1.1"
          type: string
      - in: path
        name: profileId
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/registerCommentInComponent_request'
      responses:
        "401":
          content: {}
          description: User is not authenticated
        "403":
          content: {}
          description: Non-public item is not owned by current user
        "404":
          content: {}
          description: Item does not exist
      summary: Publishes a comment on the specified profile
      tags:
      - registry
      x-content-type: multipart/form-data
      x-accepts:
      - application/json
  /registry/{cmdVersion}/profiles/{profileId}/comments/rss:
    get:
      operationId: getRssOfCommentsFromProfile_1
      parameters:
      - in: path
        name: cmdVersion
        required: true
        schema:
          default: "1.1"
          type: string
      - in: path
        name: profileId
        required: true
        schema:
          type: string
      - in: query
        name: limit
        schema:
          default: "20"
          type: string
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/Rss'
            application/xml:
              schema:
                $ref: '#/components/schemas/Rss'
            application/json:
              schema:
                $ref: '#/components/schemas/Rss'
          description: successful operation
      tags:
      - registry
      x-accepts:
      - application/json
      - application/xml
      - text/xml
  /registry/{cmdVersion}/components/{componentId}/comments/rss:
    get:
      operationId: getRssOfCommentsFromComponent_1
      parameters:
      - in: path
        name: cmdVersion
        required: true
        schema:
          default: "1.1"
          type: string
      - in: path
        name: componentId
        required: true
        schema:
          type: string
      - in: query
        name: limit
        schema:
          default: "20"
          type: string
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/Rss'
            application/xml:
              schema:
                $ref: '#/components/schemas/Rss'
            application/json:
              schema:
                $ref: '#/components/schemas/Rss'
          description: successful operation
      tags:
      - registry
      x-accepts:
      - application/json
      - application/xml
      - text/xml
  /registry/{cmdVersion}/profilesList:
    get:
      operationId: getRegisteredProfilesObject_1
      parameters:
      - in: path
        name: cmdVersion
        required: true
        schema:
          default: "1.1"
          type: string
      - in: query
        name: registrySpace
        schema:
          default: published
          type: string
      - in: query
        name: mdEditor
        schema:
          default: false
          type: boolean
      - in: query
        name: groupId
        schema:
          type: string
      - explode: true
        in: query
        name: status
        schema:
          items:
            type: string
          type: array
        style: form
      - in: query
        name: userspace
        schema:
          type: string
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ProfileDescriptionsObject'
            application/xml:
              schema:
                $ref: '#/components/schemas/ProfileDescriptionsObject'
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileDescriptionsObject'
          description: successful operation
        "401":
          content: {}
          description: Registry requires authorisation and user is not authenticated
        "403":
          content: {}
          description: Non-public registry is not owned by current user
        "404":
          content: {}
          description: Registry space does not exist
      summary: A listing of the descriptions of profiles in the specified registry
        space
      tags:
      - registry
      x-accepts:
      - application/json
      - application/xml
      - text/xml
  /registry/{cmdVersion}/profiles:
    get:
      operationId: getRegisteredProfiles_1
      parameters:
      - in: path
        name: cmdVersion
        required: true
        schema:
          default: "1.1"
          type: string
      - in: query
        name: registrySpace
        schema:
          default: published
          type: string
      - in: query
        name: mdEditor
        schema:
          default: false
          type: boolean
      - in: query
        name: groupId
        schema:
          type: string
      - explode: true
        in: query
        name: status
        schema:
          items:
            type: string
          type: array
        style: form
      - in: query
        name: userspace
        schema:
          type: string
      responses:
        "200":
          content:
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ProfileDescription'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ProfileDescription'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProfileDescription'
                type: array
          description: successful operation
        "401":
          content: {}
          description: Registry requires authorisation and user is not authenticated
        "403":
          content: {}
          description: Non-public registry is not owned by current user
        "404":
          content: {}
          description: Registry space does not exist
      summary: A listing of the descriptions of profiles in the specified registry
        space
      tags:
      - registry
      x-accepts:
      - application/json
      - application/xml
      - text/xml
    post:
      operationId: registerProfile_1
      parameters:
      - in: path
        name: cmdVersion
        required: true
        schema:
          default: "1.1"
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/registerComponent_request'
      responses:
        "401":
          content: {}
          description: User is not authenticated
        "403":
          content: {}
          description: Current user has no access
      summary: Registers a profile specification (data content) with the associated
        metadata (form content) in the user's private space
      tags:
      - registry
      x-content-type: multipart/form-data
      x-accepts:
      - application/json
  /registry/{cmdVersion}/components/usage/{componentId}:
    get:
      operationId: getComponentUsage_1
      parameters:
      - in: path
        name: cmdVersion
        required: true
        schema:
          default: "1.1"
          type: string
      - in: path
        name: componentId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/BaseDescription'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/BaseDescription'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/BaseDescription'
                type: array
          description: successful operation
        "401":
          content: {}
          description: Item requires authorisation and user is not authenticated
      summary: Returns a descriptions listing of components that use the identified
        component
      tags:
      - registry
      x-accepts:
      - application/json
      - application/xml
      - text/xml
  /registry/{cmdVersion}/profiles/{profileId}/status:
    get:
      operationId: getProfileStatus_1
      parameters:
      - in: path
        name: cmdVersion
        required: true
        schema:
          default: "1.1"
          type: string
      - in: path
        name: profileId
        required: true
        schema:
          type: string
      responses:
        "401":
          content: {}
          description: User is not authenticated
        "403":
          content: {}
          description: Item is not owned by current user
        "404":
          content: {}
          description: Item does not exist
      summary: Gets the status of a registered profile
      tags:
      - registry
      x-accepts:
      - application/json
    post:
      operationId: updateProfileStatus_1
      parameters:
      - in: path
        name: cmdVersion
        required: true
        schema:
          default: "1.1"
          type: string
      - in: path
        name: profileId
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/updateProfileStatus_request'
      responses:
        "401":
          content: {}
          description: User is not authenticated
        "403":
          content: {}
          description: Item is not owned by current user
        "404":
          content: {}
          description: Item does not exist
      summary: Updates the status of an already registered profile
      tags:
      - registry
      x-content-type: multipart/form-data
      x-accepts:
      - application/json
  /registry/{cmdVersion}/components/{componentId}/status:
    get:
      operationId: getComponentStatus_1
      parameters:
      - in: path
        name: cmdVersion
        required: true
        schema:
          default: "1.1"
          type: string
      - in: path
        name: componentId
        required: true
        schema:
          type: string
      responses:
        "401":
          content: {}
          description: User is not authenticated
        "403":
          content: {}
          description: Item is not owned by current user
        "404":
          content: {}
          description: Item does not exist
      summary: Gets the status of a registered component
      tags:
      - registry
      x-accepts:
      - application/json
    post:
      operationId: updateComponentStatus_1
      parameters:
      - in: path
        name: cmdVersion
        required: true
        schema:
          default: "1.1"
          type: string
      - in: path
        name: componentId
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/updateProfileStatus_request'
      responses:
        "401":
          content: {}
          description: User is not authenticated
        "403":
          content: {}
          description: Item is not owned by current user
        "404":
          content: {}
          description: Item does not exist
      summary: Updates the status of an already registered component
      tags:
      - registry
      x-content-type: multipart/form-data
      x-accepts:
      - application/json
  /registry/{cmdVersion}/profiles/{profileId}/successor:
    get:
      operationId: getProfileSuccessor_1
      parameters:
      - in: path
        name: cmdVersion
        required: true
        schema:
          default: "1.1"
          type: string
      - in: path
        name: profileId
        required: true
        schema:
          type: string
      responses:
        "401":
          content: {}
          description: User is not authenticated
        "403":
          content: {}
          description: Item is not owned by current user
        "404":
          content: {}
          description: Item does not exist (no item or no successor)
      summary: Gets the successor of a registered component
      tags:
      - registry
      x-accepts:
      - application/json
    post:
      operationId: updateProfileSuccessor_1
      parameters:
      - in: path
        name: cmdVersion
        required: true
        schema:
          default: "1.1"
          type: string
      - in: path
        name: profileId
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/updateComponentSuccessor_request'
      responses:
        "401":
          content: {}
          description: User is not authenticated
        "403":
          content: {}
          description: Item is not owned by current user
        "404":
          content: {}
          description: Item does not exist
      summary: Sets the successor for a registered profile (must have deprecated status)
      tags:
      - registry
      x-content-type: multipart/form-data
      x-accepts:
      - application/json
  /registry/{cmdVersion}/components/rss:
    get:
      operationId: getRssComponent_1
      parameters:
      - in: path
        name: cmdVersion
        required: true
        schema:
          default: "1.1"
          type: string
      - in: query
        name: groupId
        schema:
          type: string
      - in: query
        name: registrySpace
        schema:
          default: published
          type: string
      - explode: true
        in: query
        name: status
        schema:
          items:
            type: string
          type: array
        style: form
      - in: query
        name: limit
        schema:
          default: "20"
          type: string
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/Rss'
            application/xml:
              schema:
                $ref: '#/components/schemas/Rss'
            application/json:
              schema:
                $ref: '#/components/schemas/Rss'
          description: successful operation
      tags:
      - registry
      x-accepts:
      - application/json
      - application/xml
      - text/xml
  /registry/{cmdVersion}/pingSession:
    get:
      operationId: pingSession_1
      parameters:
      - in: path
        name: cmdVersion
        required: true
        schema:
          default: "1.1"
          type: string
      responses:
        default:
          content: {}
          description: successful operation
      summary: Keeps the session alive
      tags:
      - registry
      x-accepts:
      - application/json
  /registry/{cmdVersion}/profiles/rss:
    get:
      operationId: getRssProfile_1
      parameters:
      - in: path
        name: cmdVersion
        required: true
        schema:
          default: "1.1"
          type: string
      - in: query
        name: groupId
        schema:
          type: string
      - in: query
        name: registrySpace
        schema:
          default: published
          type: string
      - explode: true
        in: query
        name: status
        schema:
          items:
            type: string
          type: array
        style: form
      - in: query
        name: limit
        schema:
          default: "20"
          type: string
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/Rss'
            application/xml:
              schema:
                $ref: '#/components/schemas/Rss'
            application/json:
              schema:
                $ref: '#/components/schemas/Rss'
          description: successful operation
      tags:
      - registry
      x-accepts:
      - application/json
      - application/xml
      - text/xml
  /groups/usermembership:
    get:
      operationId: getGroupsTheCurrentUserIsAMemberOf
      responses:
        "200":
          content:
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Group'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Group'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Group'
                type: array
          description: successful operation
      summary: Returns a listing of groups the current user is a member of (empty
        list when unauthenticated)
      tags:
      - groups
      x-accepts:
      - application/json
      - application/xml
      - text/xml
  /items/{itemId}/groups:
    get:
      operationId: getGroupsTheItemIsAMemberOf
      parameters:
      - in: path
        name: itemId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Group'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Group'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Group'
                type: array
          description: successful operation
      summary: Returns a listing of groups to which an item belongs
      tags:
      - items
      x-accepts:
      - application/json
      - application/xml
      - text/xml
  /items/{itemId}/transferownership:
    post:
      operationId: transferItemOwnershipToGroup
      parameters:
      - in: path
        name: itemId
        required: true
        schema:
          type: string
      - in: query
        name: groupId
        schema:
          format: int64
          type: integer
      responses:
        "403":
          content: {}
          description: Current user has no access
      summary: Transfers an item to the specified group (either from the private space
        or another group)
      tags:
      - items
      x-accepts:
      - application/json
  /items/{itemId}:
    get:
      operationId: getBaseDescription
      parameters:
      - in: path
        name: itemId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/BaseDescription'
            application/xml:
              schema:
                $ref: '#/components/schemas/BaseDescription'
            application/json:
              schema:
                $ref: '#/components/schemas/BaseDescription'
          description: successful operation
        "401":
          content: {}
          description: Item requires authorisation and user is not authenticated
        "403":
          content: {}
          description: Non-public item is not owned by current user and user is no
            administrator
        "404":
          content: {}
          description: Item does not exist
      summary: The description (metadata) of a single component or profile item
      tags:
      - items
      x-accepts:
      - application/json
      - application/xml
      - text/xml
  /items/{itemId}/rights:
    get:
      operationId: getItemRights
      parameters:
      - in: path
        name: itemId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ItemRights'
            application/xml:
              schema:
                $ref: '#/components/schemas/ItemRights'
            application/json:
              schema:
                $ref: '#/components/schemas/ItemRights'
          description: successful operation
      summary: Returns information about the rights to an item for the current user
      tags:
      - items
      x-accepts:
      - application/json
      - application/xml
      - text/xml
  /items/{itemId}/lock:
    delete:
      operationId: removeItemLock
      parameters:
      - in: path
        name: itemId
        required: true
        schema:
          type: string
      responses:
        default:
          content: {}
          description: successful operation
      tags:
      - items
      x-accepts:
      - application/json
    get:
      operationId: getItemLock
      parameters:
      - in: path
        name: itemId
        required: true
        schema:
          type: string
      responses:
        default:
          content: {}
          description: successful operation
      tags:
      - items
      x-accepts:
      - application/json
    put:
      operationId: putItemLock
      parameters:
      - in: path
        name: itemId
        required: true
        schema:
          type: string
      responses:
        default:
          content: {}
          description: successful operation
      tags:
      - items
      x-accepts:
      - application/json
  /authentication:
    get:
      operationId: getAuthenticationInformation
      parameters:
      - in: query
        name: redirect
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: "If no query parameters are passed, with the authentications\
            \ status in its body"
        "303":
          content: {}
          description: A redirect to the URI provided as the value of the 'redirect'
            parameter
      summary: Information on the current authentication state. Pass 'redirect' query
        parameter to make this method redirect to the URI specified as its value.
      tags:
      - authentication
      x-accepts:
      - application/json
    post:
      operationId: triggerAuthenticationRequest
      responses:
        "303":
          content: {}
          description: "A redirect, either to a Shibboleth authentication page/discovery\
            \ service or other identification mechanism, and ultimately to the same\
            \ URI as requested (which should be picked up as a GET)"
        "401":
          content: {}
          description: "If unauthenticated, a request to authenticate may be returned\
            \ (not in case of Shibboleth authentication)"
      summary: Triggers the service to require the client to authenticate by means
        of the configured authentication mechanism. Notice that this might require
        user interaction!
      tags:
      - authentication
      x-accepts:
      - application/json
components:
  schemas:
    AllowedAttributetypesXML:
      type: object
      xml:
        name: CMDElement_Types
    Comment:
      example:
        commentDate: 2000-01-23T04:56:07.000+00:00
        componentRef: componentRef
        canDelete: true
        comment: comment
        id: id
        userName: userName
        userId: 0
      properties:
        commentDate:
          format: date-time
          type: string
        id:
          type: string
        userName:
          type: string
        canDelete:
          type: boolean
        userId:
          format: int64
          type: integer
        comment:
          type: string
        componentRef:
          type: string
      type: object
      xml:
        name: comment
    ComponentDescription:
      example:
        successor: successor
        profile: true
        creatorName: creatorName
        description: description
        derivedfrom: derivedfrom
        dbUserId: 6
        type: type
        userId: userId
        content: content
        recommended: true
        groupName: groupName
        deleted: true
        public: true
        commentsCount: 1
        dbId: 0
        domainName: domainName
        name: name
        registrationDate: 2000-01-23T04:56:07.000+00:00
        href: href
        id: id
        showInEditor: true
        status: DEVELOPMENT
      properties:
        dbId:
          format: int64
          type: integer
        name:
          type: string
        description:
          type: string
        registrationDate:
          format: date-time
          type: string
        creatorName:
          type: string
        dbUserId:
          format: int64
          type: integer
        userId:
          type: string
        domainName:
          type: string
        href:
          type: string
          xml:
            namespace: http://www.w3.org/1999/xlink
        groupName:
          type: string
        status:
          enum:
          - DEVELOPMENT
          - PRODUCTION
          - DEPRECATED
          type: string
        derivedfrom:
          type: string
        successor:
          type: string
        commentsCount:
          format: int32
          type: integer
        content:
          type: string
        deleted:
          type: boolean
        recommended:
          type: boolean
        public:
          type: boolean
        id:
          type: string
        type:
          type: string
        showInEditor:
          type: boolean
        profile:
          type: boolean
      type: object
      xml:
        name: componentDescription
    Attribute:
      example:
        conceptLink: conceptLink
        valueScheme: BOOLEAN
        documentation:
        - lang: lang
          value: value
        - lang: lang
          value: value
        name: name
        attributeValueScheme:
          vocabulary:
            valueLanguage: valueLanguage
            enumeration:
              item:
              - conceptLink: conceptLink
                appInfo: appInfo
                value: value
                otherAttributes:
                  key: otherAttributes
              - conceptLink: conceptLink
                appInfo: appInfo
                value: value
                otherAttributes:
                  key: otherAttributes
              appinfo: appinfo
            uri: uri
            valueProperty: valueProperty
          pattern: pattern
        otherAttributes:
          key: otherAttributes
        required: true
        autoValue:
        - autoValue
        - autoValue
      properties:
        documentation:
          items:
            $ref: '#/components/schemas/DocumentationType'
          type: array
          xml:
            name: Documentation
        attributeValueScheme:
          $ref: '#/components/schemas/ValueSchemeType'
        autoValue:
          items:
            type: string
            xml:
              name: AutoValue
          type: array
          xml:
            name: AutoValue
        name:
          type: string
          xml:
            attribute: true
        conceptLink:
          type: string
          xml:
            attribute: true
            name: ConceptLink
        valueScheme:
          enum:
          - BOOLEAN
          - DECIMAL
          - FLOAT
          - INT
          - STRING
          - ANY_URI
          - DATE
          - G_DAY
          - G_MONTH
          - G_YEAR
          - TIME
          - DATE_TIME
          type: string
          xml:
            attribute: true
            name: ValueScheme
        required:
          type: boolean
          xml:
            attribute: true
            name: Required
        otherAttributes:
          additionalProperties:
            type: string
          type: object
      type: object
    AttributeListType:
      example:
        attribute:
        - conceptLink: conceptLink
          valueScheme: BOOLEAN
          documentation:
          - lang: lang
            value: value
          - lang: lang
            value: value
          name: name
          attributeValueScheme:
            vocabulary:
              valueLanguage: valueLanguage
              enumeration:
                item:
                - conceptLink: conceptLink
                  appInfo: appInfo
                  value: value
                  otherAttributes:
                    key: otherAttributes
                - conceptLink: conceptLink
                  appInfo: appInfo
                  value: value
                  otherAttributes:
                    key: otherAttributes
                appinfo: appinfo
              uri: uri
              valueProperty: valueProperty
            pattern: pattern
          otherAttributes:
            key: otherAttributes
          required: true
          autoValue:
          - autoValue
          - autoValue
        - conceptLink: conceptLink
          valueScheme: BOOLEAN
          documentation:
          - lang: lang
            value: value
          - lang: lang
            value: value
          name: name
          attributeValueScheme:
            vocabulary:
              valueLanguage: valueLanguage
              enumeration:
                item:
                - conceptLink: conceptLink
                  appInfo: appInfo
                  value: value
                  otherAttributes:
                    key: otherAttributes
                - conceptLink: conceptLink
                  appInfo: appInfo
                  value: value
                  otherAttributes:
                    key: otherAttributes
                appinfo: appinfo
              uri: uri
              valueProperty: valueProperty
            pattern: pattern
          otherAttributes:
            key: otherAttributes
          required: true
          autoValue:
          - autoValue
          - autoValue
      properties:
        attribute:
          items:
            $ref: '#/components/schemas/Attribute'
          type: array
          xml:
            name: Attribute
      required:
      - attribute
      type: object
    ComponentSpec:
      example:
        isProfile: true
        cmdoriginalVersion: cmdoriginalVersion
        component:
          component:
          - null
          - null
          conceptLink: conceptLink
          documentation:
          - lang: lang
            value: value
          - lang: lang
            value: value
          attributeList:
            attribute:
            - conceptLink: conceptLink
              valueScheme: BOOLEAN
              documentation:
              - lang: lang
                value: value
              - lang: lang
                value: value
              name: name
              attributeValueScheme:
                vocabulary:
                  valueLanguage: valueLanguage
                  enumeration:
                    item:
                    - conceptLink: conceptLink
                      appInfo: appInfo
                      value: value
                      otherAttributes:
                        key: otherAttributes
                    - conceptLink: conceptLink
                      appInfo: appInfo
                      value: value
                      otherAttributes:
                        key: otherAttributes
                    appinfo: appinfo
                  uri: uri
                  valueProperty: valueProperty
                pattern: pattern
              otherAttributes:
                key: otherAttributes
              required: true
              autoValue:
              - autoValue
              - autoValue
            - conceptLink: conceptLink
              valueScheme: BOOLEAN
              documentation:
              - lang: lang
                value: value
              - lang: lang
                value: value
              name: name
              attributeValueScheme:
                vocabulary:
                  valueLanguage: valueLanguage
                  enumeration:
                    item:
                    - conceptLink: conceptLink
                      appInfo: appInfo
                      value: value
                      otherAttributes:
                        key: otherAttributes
                    - conceptLink: conceptLink
                      appInfo: appInfo
                      value: value
                      otherAttributes:
                        key: otherAttributes
                    appinfo: appinfo
                  uri: uri
                  valueProperty: valueProperty
                pattern: pattern
              otherAttributes:
                key: otherAttributes
              required: true
              autoValue:
              - autoValue
              - autoValue
          name: name
          componentRef: componentRef
          cardinalityMin:
          - cardinalityMin
          - cardinalityMin
          cardinalityMax:
          - cardinalityMax
          - cardinalityMax
          otherAttributes:
            key: otherAttributes
          element:
          - conceptLink: conceptLink
            valueScheme:
              vocabulary:
                valueLanguage: valueLanguage
                enumeration:
                  item:
                  - conceptLink: conceptLink
                    appInfo: appInfo
                    value: value
                    otherAttributes:
                      key: otherAttributes
                  - conceptLink: conceptLink
                    appInfo: appInfo
                    value: value
                    otherAttributes:
                      key: otherAttributes
                  appinfo: appinfo
                uri: uri
                valueProperty: valueProperty
              pattern: pattern
            documentation:
            - lang: lang
              value: value
            - lang: lang
              value: value
            attributeList:
              attribute:
              - conceptLink: conceptLink
                valueScheme: BOOLEAN
                documentation:
                - lang: lang
                  value: value
                - lang: lang
                  value: value
                name: name
                attributeValueScheme:
                  vocabulary:
                    valueLanguage: valueLanguage
                    enumeration:
                      item:
                      - conceptLink: conceptLink
                        appInfo: appInfo
                        value: value
                        otherAttributes:
                          key: otherAttributes
                      - conceptLink: conceptLink
                        appInfo: appInfo
                        value: value
                        otherAttributes:
                          key: otherAttributes
                      appinfo: appinfo
                    uri: uri
                    valueProperty: valueProperty
                  pattern: pattern
                otherAttributes:
                  key: otherAttributes
                required: true
                autoValue:
                - autoValue
                - autoValue
              - conceptLink: conceptLink
                valueScheme: BOOLEAN
                documentation:
                - lang: lang
                  value: value
                - lang: lang
                  value: value
                name: name
                attributeValueScheme:
                  vocabulary:
                    valueLanguage: valueLanguage
                    enumeration:
                      item:
                      - conceptLink: conceptLink
                        appInfo: appInfo
                        value: value
                        otherAttributes:
                          key: otherAttributes
                      - conceptLink: conceptLink
                        appInfo: appInfo
                        value: value
                        otherAttributes:
                          key: otherAttributes
                      appinfo: appinfo
                    uri: uri
                    valueProperty: valueProperty
                  pattern: pattern
                otherAttributes:
                  key: otherAttributes
                required: true
                autoValue:
                - autoValue
                - autoValue
            name: name
            valueSchemeAttribute: BOOLEAN
            cardinalityMin:
            - cardinalityMin
            - cardinalityMin
            cardinalityMax:
            - cardinalityMax
            - cardinalityMax
            otherAttributes:
              key: otherAttributes
            multilingual: true
            autoValue:
            - autoValue
            - autoValue
          - conceptLink: conceptLink
            valueScheme:
              vocabulary:
                valueLanguage: valueLanguage
                enumeration:
                  item:
                  - conceptLink: conceptLink
                    appInfo: appInfo
                    value: value
                    otherAttributes:
                      key: otherAttributes
                  - conceptLink: conceptLink
                    appInfo: appInfo
                    value: value
                    otherAttributes:
                      key: otherAttributes
                  appinfo: appinfo
                uri: uri
                valueProperty: valueProperty
              pattern: pattern
            documentation:
            - lang: lang
              value: value
            - lang: lang
              value: value
            attributeList:
              attribute:
              - conceptLink: conceptLink
                valueScheme: BOOLEAN
                documentation:
                - lang: lang
                  value: value
                - lang: lang
                  value: value
                name: name
                attributeValueScheme:
                  vocabulary:
                    valueLanguage: valueLanguage
                    enumeration:
                      item:
                      - conceptLink: conceptLink
                        appInfo: appInfo
                        value: value
                        otherAttributes:
                          key: otherAttributes
                      - conceptLink: conceptLink
                        appInfo: appInfo
                        value: value
                        otherAttributes:
                          key: otherAttributes
                      appinfo: appinfo
                    uri: uri
                    valueProperty: valueProperty
                  pattern: pattern
                otherAttributes:
                  key: otherAttributes
                required: true
                autoValue:
                - autoValue
                - autoValue
              - conceptLink: conceptLink
                valueScheme: BOOLEAN
                documentation:
                - lang: lang
                  value: value
                - lang: lang
                  value: value
                name: name
                attributeValueScheme:
                  vocabulary:
                    valueLanguage: valueLanguage
                    enumeration:
                      item:
                      - conceptLink: conceptLink
                        appInfo: appInfo
                        value: value
                        otherAttributes:
                          key: otherAttributes
                      - conceptLink: conceptLink
                        appInfo: appInfo
                        value: value
                        otherAttributes:
                          key: otherAttributes
                      appinfo: appinfo
                    uri: uri
                    valueProperty: valueProperty
                  pattern: pattern
                otherAttributes:
                  key: otherAttributes
                required: true
                autoValue:
                - autoValue
                - autoValue
            name: name
            valueSchemeAttribute: BOOLEAN
            cardinalityMin:
            - cardinalityMin
            - cardinalityMin
            cardinalityMax:
            - cardinalityMax
            - cardinalityMax
            otherAttributes:
              key: otherAttributes
            multilingual: true
            autoValue:
            - autoValue
            - autoValue
          base: base
        header:
          successor: successor
          name: name
          derivedFrom: derivedFrom
          description: description
          id: id
          statusComment: statusComment
          status: status
        cmdversion: cmdversion
      properties:
        header:
          $ref: '#/components/schemas/Header'
        component:
          $ref: '#/components/schemas/ComponentType'
        isProfile:
          type: boolean
          xml:
            attribute: true
        cmdoriginalVersion:
          type: string
        cmdversion:
          type: string
      required:
      - component
      - header
      type: object
      xml:
        name: ComponentSpec
    ComponentType:
      example:
        component:
        - null
        - null
        conceptLink: conceptLink
        documentation:
        - lang: lang
          value: value
        - lang: lang
          value: value
        attributeList:
          attribute:
          - conceptLink: conceptLink
            valueScheme: BOOLEAN
            documentation:
            - lang: lang
              value: value
            - lang: lang
              value: value
            name: name
            attributeValueScheme:
              vocabulary:
                valueLanguage: valueLanguage
                enumeration:
                  item:
                  - conceptLink: conceptLink
                    appInfo: appInfo
                    value: value
                    otherAttributes:
                      key: otherAttributes
                  - conceptLink: conceptLink
                    appInfo: appInfo
                    value: value
                    otherAttributes:
                      key: otherAttributes
                  appinfo: appinfo
                uri: uri
                valueProperty: valueProperty
              pattern: pattern
            otherAttributes:
              key: otherAttributes
            required: true
            autoValue:
            - autoValue
            - autoValue
          - conceptLink: conceptLink
            valueScheme: BOOLEAN
            documentation:
            - lang: lang
              value: value
            - lang: lang
              value: value
            name: name
            attributeValueScheme:
              vocabulary:
                valueLanguage: valueLanguage
                enumeration:
                  item:
                  - conceptLink: conceptLink
                    appInfo: appInfo
                    value: value
                    otherAttributes:
                      key: otherAttributes
                  - conceptLink: conceptLink
                    appInfo: appInfo
                    value: value
                    otherAttributes:
                      key: otherAttributes
                  appinfo: appinfo
                uri: uri
                valueProperty: valueProperty
              pattern: pattern
            otherAttributes:
              key: otherAttributes
            required: true
            autoValue:
            - autoValue
            - autoValue
        name: name
        componentRef: componentRef
        cardinalityMin:
        - cardinalityMin
        - cardinalityMin
        cardinalityMax:
        - cardinalityMax
        - cardinalityMax
        otherAttributes:
          key: otherAttributes
        element:
        - conceptLink: conceptLink
          valueScheme:
            vocabulary:
              valueLanguage: valueLanguage
              enumeration:
                item:
                - conceptLink: conceptLink
                  appInfo: appInfo
                  value: value
                  otherAttributes:
                    key: otherAttributes
                - conceptLink: conceptLink
                  appInfo: appInfo
                  value: value
                  otherAttributes:
                    key: otherAttributes
                appinfo: appinfo
              uri: uri
              valueProperty: valueProperty
            pattern: pattern
          documentation:
          - lang: lang
            value: value
          - lang: lang
            value: value
          attributeList:
            attribute:
            - conceptLink: conceptLink
              valueScheme: BOOLEAN
              documentation:
              - lang: lang
                value: value
              - lang: lang
                value: value
              name: name
              attributeValueScheme:
                vocabulary:
                  valueLanguage: valueLanguage
                  enumeration:
                    item:
                    - conceptLink: conceptLink
                      appInfo: appInfo
                      value: value
                      otherAttributes:
                        key: otherAttributes
                    - conceptLink: conceptLink
                      appInfo: appInfo
                      value: value
                      otherAttributes:
                        key: otherAttributes
                    appinfo: appinfo
                  uri: uri
                  valueProperty: valueProperty
                pattern: pattern
              otherAttributes:
                key: otherAttributes
              required: true
              autoValue:
              - autoValue
              - autoValue
            - conceptLink: conceptLink
              valueScheme: BOOLEAN
              documentation:
              - lang: lang
                value: value
              - lang: lang
                value: value
              name: name
              attributeValueScheme:
                vocabulary:
                  valueLanguage: valueLanguage
                  enumeration:
                    item:
                    - conceptLink: conceptLink
                      appInfo: appInfo
                      value: value
                      otherAttributes:
                        key: otherAttributes
                    - conceptLink: conceptLink
                      appInfo: appInfo
                      value: value
                      otherAttributes:
                        key: otherAttributes
                    appinfo: appinfo
                  uri: uri
                  valueProperty: valueProperty
                pattern: pattern
              otherAttributes:
                key: otherAttributes
              required: true
              autoValue:
              - autoValue
              - autoValue
          name: name
          valueSchemeAttribute: BOOLEAN
          cardinalityMin:
          - cardinalityMin
          - cardinalityMin
          cardinalityMax:
          - cardinalityMax
          - cardinalityMax
          otherAttributes:
            key: otherAttributes
          multilingual: true
          autoValue:
          - autoValue
          - autoValue
        - conceptLink: conceptLink
          valueScheme:
            vocabulary:
              valueLanguage: valueLanguage
              enumeration:
                item:
                - conceptLink: conceptLink
                  appInfo: appInfo
                  value: value
                  otherAttributes:
                    key: otherAttributes
                - conceptLink: conceptLink
                  appInfo: appInfo
                  value: value
                  otherAttributes:
                    key: otherAttributes
                appinfo: appinfo
              uri: uri
              valueProperty: valueProperty
            pattern: pattern
          documentation:
          - lang: lang
            value: value
          - lang: lang
            value: value
          attributeList:
            attribute:
            - conceptLink: conceptLink
              valueScheme: BOOLEAN
              documentation:
              - lang: lang
                value: value
              - lang: lang
                value: value
              name: name
              attributeValueScheme:
                vocabulary:
                  valueLanguage: valueLanguage
                  enumeration:
                    item:
                    - conceptLink: conceptLink
                      appInfo: appInfo
                      value: value
                      otherAttributes:
                        key: otherAttributes
                    - conceptLink: conceptLink
                      appInfo: appInfo
                      value: value
                      otherAttributes:
                        key: otherAttributes
                    appinfo: appinfo
                  uri: uri
                  valueProperty: valueProperty
                pattern: pattern
              otherAttributes:
                key: otherAttributes
              required: true
              autoValue:
              - autoValue
              - autoValue
            - conceptLink: conceptLink
              valueScheme: BOOLEAN
              documentation:
              - lang: lang
                value: value
              - lang: lang
                value: value
              name: name
              attributeValueScheme:
                vocabulary:
                  valueLanguage: valueLanguage
                  enumeration:
                    item:
                    - conceptLink: conceptLink
                      appInfo: appInfo
                      value: value
                      otherAttributes:
                        key: otherAttributes
                    - conceptLink: conceptLink
                      appInfo: appInfo
                      value: value
                      otherAttributes:
                        key: otherAttributes
                    appinfo: appinfo
                  uri: uri
                  valueProperty: valueProperty
                pattern: pattern
              otherAttributes:
                key: otherAttributes
              required: true
              autoValue:
              - autoValue
              - autoValue
          name: name
          valueSchemeAttribute: BOOLEAN
          cardinalityMin:
          - cardinalityMin
          - cardinalityMin
          cardinalityMax:
          - cardinalityMax
          - cardinalityMax
          otherAttributes:
            key: otherAttributes
          multilingual: true
          autoValue:
          - autoValue
          - autoValue
        base: base
      properties:
        documentation:
          items:
            $ref: '#/components/schemas/DocumentationType'
          type: array
          xml:
            name: Documentation
        attributeList:
          $ref: '#/components/schemas/AttributeListType'
        element:
          items:
            $ref: '#/components/schemas/ElementType'
          type: array
          xml:
            name: Element
        component:
          items:
            $ref: '#/components/schemas/ComponentType'
          type: array
          xml:
            name: Component
        name:
          type: string
          xml:
            attribute: true
        componentRef:
          type: string
          xml:
            attribute: true
            name: ComponentRef
        conceptLink:
          type: string
          xml:
            attribute: true
            name: ConceptLink
        cardinalityMin:
          items:
            type: string
          type: array
        cardinalityMax:
          items:
            type: string
          type: array
        base:
          type: string
          xml:
            attribute: true
            namespace: http://www.w3.org/XML/1998/namespace
        otherAttributes:
          additionalProperties:
            type: string
          type: object
      type: object
    DocumentationType:
      example:
        lang: lang
        value: value
      properties:
        value:
          type: string
        lang:
          type: string
          xml:
            attribute: true
            namespace: http://www.w3.org/XML/1998/namespace
      type: object
    ElementType:
      example:
        conceptLink: conceptLink
        valueScheme:
          vocabulary:
            valueLanguage: valueLanguage
            enumeration:
              item:
              - conceptLink: conceptLink
                appInfo: appInfo
                value: value
                otherAttributes:
                  key: otherAttributes
              - conceptLink: conceptLink
                appInfo: appInfo
                value: value
                otherAttributes:
                  key: otherAttributes
              appinfo: appinfo
            uri: uri
            valueProperty: valueProperty
          pattern: pattern
        documentation:
        - lang: lang
          value: value
        - lang: lang
          value: value
        attributeList:
          attribute:
          - conceptLink: conceptLink
            valueScheme: BOOLEAN
            documentation:
            - lang: lang
              value: value
            - lang: lang
              value: value
            name: name
            attributeValueScheme:
              vocabulary:
                valueLanguage: valueLanguage
                enumeration:
                  item:
                  - conceptLink: conceptLink
                    appInfo: appInfo
                    value: value
                    otherAttributes:
                      key: otherAttributes
                  - conceptLink: conceptLink
                    appInfo: appInfo
                    value: value
                    otherAttributes:
                      key: otherAttributes
                  appinfo: appinfo
                uri: uri
                valueProperty: valueProperty
              pattern: pattern
            otherAttributes:
              key: otherAttributes
            required: true
            autoValue:
            - autoValue
            - autoValue
          - conceptLink: conceptLink
            valueScheme: BOOLEAN
            documentation:
            - lang: lang
              value: value
            - lang: lang
              value: value
            name: name
            attributeValueScheme:
              vocabulary:
                valueLanguage: valueLanguage
                enumeration:
                  item:
                  - conceptLink: conceptLink
                    appInfo: appInfo
                    value: value
                    otherAttributes:
                      key: otherAttributes
                  - conceptLink: conceptLink
                    appInfo: appInfo
                    value: value
                    otherAttributes:
                      key: otherAttributes
                  appinfo: appinfo
                uri: uri
                valueProperty: valueProperty
              pattern: pattern
            otherAttributes:
              key: otherAttributes
            required: true
            autoValue:
            - autoValue
            - autoValue
        name: name
        valueSchemeAttribute: BOOLEAN
        cardinalityMin:
        - cardinalityMin
        - cardinalityMin
        cardinalityMax:
        - cardinalityMax
        - cardinalityMax
        otherAttributes:
          key: otherAttributes
        multilingual: true
        autoValue:
        - autoValue
        - autoValue
      properties:
        documentation:
          items:
            $ref: '#/components/schemas/DocumentationType'
          type: array
          xml:
            name: Documentation
        attributeList:
          $ref: '#/components/schemas/AttributeListType'
        valueScheme:
          $ref: '#/components/schemas/ValueSchemeType'
        autoValue:
          items:
            type: string
            xml:
              name: AutoValue
          type: array
          xml:
            name: AutoValue
        name:
          type: string
          xml:
            attribute: true
        conceptLink:
          type: string
          xml:
            attribute: true
            name: ConceptLink
        valueSchemeAttribute:
          enum:
          - BOOLEAN
          - DECIMAL
          - FLOAT
          - INT
          - STRING
          - ANY_URI
          - DATE
          - G_DAY
          - G_MONTH
          - G_YEAR
          - TIME
          - DATE_TIME
          type: string
          xml:
            attribute: true
            name: ValueScheme
        cardinalityMin:
          items:
            type: string
          type: array
        cardinalityMax:
          items:
            type: string
          type: array
        multilingual:
          type: boolean
          xml:
            attribute: true
            name: Multilingual
        otherAttributes:
          additionalProperties:
            type: string
          type: object
      type: object
    EnumerationType:
      example:
        item:
        - conceptLink: conceptLink
          appInfo: appInfo
          value: value
          otherAttributes:
            key: otherAttributes
        - conceptLink: conceptLink
          appInfo: appInfo
          value: value
          otherAttributes:
            key: otherAttributes
        appinfo: appinfo
      properties:
        appinfo:
          type: string
        item:
          items:
            $ref: '#/components/schemas/ItemType'
          type: array
      required:
      - item
      type: object
    Header:
      example:
        successor: successor
        name: name
        derivedFrom: derivedFrom
        description: description
        id: id
        statusComment: statusComment
        status: status
      properties:
        id:
          type: string
          xml:
            name: ID
        name:
          type: string
          xml:
            name: Name
        description:
          type: string
          xml:
            name: Description
        status:
          type: string
          xml:
            name: Status
        statusComment:
          type: string
          xml:
            name: StatusComment
        successor:
          type: string
          xml:
            name: Successor
        derivedFrom:
          type: string
          xml:
            name: DerivedFrom
      required:
      - id
      - name
      - status
      type: object
    ItemType:
      example:
        conceptLink: conceptLink
        appInfo: appInfo
        value: value
        otherAttributes:
          key: otherAttributes
      properties:
        value:
          type: string
        conceptLink:
          type: string
          xml:
            attribute: true
            name: ConceptLink
        appInfo:
          type: string
          xml:
            attribute: true
            name: AppInfo
        otherAttributes:
          additionalProperties:
            type: string
          type: object
      type: object
    ValueSchemeType:
      example:
        vocabulary:
          valueLanguage: valueLanguage
          enumeration:
            item:
            - conceptLink: conceptLink
              appInfo: appInfo
              value: value
              otherAttributes:
                key: otherAttributes
            - conceptLink: conceptLink
              appInfo: appInfo
              value: value
              otherAttributes:
                key: otherAttributes
            appinfo: appinfo
          uri: uri
          valueProperty: valueProperty
        pattern: pattern
      properties:
        pattern:
          type: string
        vocabulary:
          $ref: '#/components/schemas/VocabularyType'
      type: object
    VocabularyType:
      example:
        valueLanguage: valueLanguage
        enumeration:
          item:
          - conceptLink: conceptLink
            appInfo: appInfo
            value: value
            otherAttributes:
              key: otherAttributes
          - conceptLink: conceptLink
            appInfo: appInfo
            value: value
            otherAttributes:
              key: otherAttributes
          appinfo: appinfo
        uri: uri
        valueProperty: valueProperty
      properties:
        enumeration:
          $ref: '#/components/schemas/EnumerationType'
        uri:
          type: string
          xml:
            attribute: true
            name: URI
        valueProperty:
          type: string
          xml:
            attribute: true
            name: ValueProperty
        valueLanguage:
          type: string
          xml:
            attribute: true
            name: ValueLanguage
      type: object
    Category:
      example:
        domain: domain
        value: value
      properties:
        value:
          type: string
        domain:
          type: string
          xml:
            attribute: true
      type: object
    Cloud:
      example:
        path: path
        protocol: XML_RPC
        port: 0
        registerProcedure: registerProcedure
        domain: domain
      properties:
        domain:
          type: string
          xml:
            attribute: true
        port:
          type: integer
          xml:
            attribute: true
        path:
          type: string
          xml:
            attribute: true
        registerProcedure:
          type: string
          xml:
            attribute: true
        protocol:
          enum:
          - XML_RPC
          - HTTP_POST
          - SOAP
          type: string
          xml:
            attribute: true
      type: object
    Enclosure:
      example:
        length: 2
        type: type
        value: value
        url: url
      properties:
        value:
          type: string
        url:
          type: string
          xml:
            attribute: true
        length:
          type: integer
          xml:
            attribute: true
        type:
          type: string
          xml:
            attribute: true
      type: object
    Guid:
      example:
        isPermaLink: true
        value: value
      properties:
        value:
          type: string
        isPermaLink:
          type: boolean
          xml:
            attribute: true
      type: object
    Image:
      example:
        link: link
        width: 1
        description: description
        title: title
        url: url
        height: 5
      properties:
        url:
          type: string
        title:
          type: string
        link:
          type: string
        width:
          default: 88
          format: int32
          type: integer
        height:
          default: 31
          format: int32
          type: integer
        description:
          type: string
      required:
      - link
      - title
      - url
      type: object
    Rss:
      example:
        channel:
          image:
            link: link
            width: 1
            description: description
            title: title
            url: url
            height: 5
          copyright: copyright
          item:
          - comments: comments
            enclosure:
              length: 2
              type: type
              value: value
              url: url
            link: link
            description: description
            guid:
              isPermaLink: true
              value: value
            title: title
            category:
              domain: domain
              value: value
            pubDate: pubDate
            any:
            - "{}"
            - "{}"
            otherAttributes:
              key: otherAttributes
          - comments: comments
            enclosure:
              length: 2
              type: type
              value: value
              url: url
            link: link
            description: description
            guid:
              isPermaLink: true
              value: value
            title: title
            category:
              domain: domain
              value: value
            pubDate: pubDate
            any:
            - "{}"
            - "{}"
            otherAttributes:
              key: otherAttributes
          skipHours:
            hour:
            - 5
            - 5
          lastBuildDate: lastBuildDate
          link: link
          rating: rating
          description: description
          generator: generator
          language: language
          title: title
          managingEditor: managingEditor
          webMaster: webMaster
          pubDate: pubDate
          ttl: 6
          otherAttributes:
            key: otherAttributes
          skipDays:
            day:
            - MONDAY
            - MONDAY
          cloud:
            path: path
            protocol: XML_RPC
            port: 0
            registerProcedure: registerProcedure
            domain: domain
          textInput:
            name: name
            link: link
            description: description
            title: title
          docs: docs
          category:
            domain: domain
            value: value
        any:
        - "{}"
        - "{}"
        version: 7.061401241503109
        otherAttributes:
          key: otherAttributes
      properties:
        channel:
          $ref: '#/components/schemas/RssChannel'
        any:
          items:
            properties: {}
            type: object
          type: array
        version:
          format: double
          type: number
          xml:
            attribute: true
        otherAttributes:
          additionalProperties:
            type: string
          type: object
      required:
      - channel
      type: object
      xml:
        name: rss
    RssChannel:
      example:
        image:
          link: link
          width: 1
          description: description
          title: title
          url: url
          height: 5
        copyright: copyright
        item:
        - comments: comments
          enclosure:
            length: 2
            type: type
            value: value
            url: url
          link: link
          description: description
          guid:
            isPermaLink: true
            value: value
          title: title
          category:
            domain: domain
            value: value
          pubDate: pubDate
          any:
          - "{}"
          - "{}"
          otherAttributes:
            key: otherAttributes
        - comments: comments
          enclosure:
            length: 2
            type: type
            value: value
            url: url
          link: link
          description: description
          guid:
            isPermaLink: true
            value: value
          title: title
          category:
            domain: domain
            value: value
          pubDate: pubDate
          any:
          - "{}"
          - "{}"
          otherAttributes:
            key: otherAttributes
        skipHours:
          hour:
          - 5
          - 5
        lastBuildDate: lastBuildDate
        link: link
        rating: rating
        description: description
        generator: generator
        language: language
        title: title
        managingEditor: managingEditor
        webMaster: webMaster
        pubDate: pubDate
        ttl: 6
        otherAttributes:
          key: otherAttributes
        skipDays:
          day:
          - MONDAY
          - MONDAY
        cloud:
          path: path
          protocol: XML_RPC
          port: 0
          registerProcedure: registerProcedure
          domain: domain
        textInput:
          name: name
          link: link
          description: description
          title: title
        docs: docs
        category:
          domain: domain
          value: value
      properties:
        title:
          type: string
        link:
          type: string
        description:
          type: string
        language:
          type: string
        copyright:
          type: string
        managingEditor:
          type: string
        webMaster:
          type: string
        pubDate:
          type: string
        lastBuildDate:
          type: string
        category:
          $ref: '#/components/schemas/Category'
        generator:
          type: string
        docs:
          type: string
        cloud:
          $ref: '#/components/schemas/Cloud'
        ttl:
          type: integer
        image:
          $ref: '#/components/schemas/Image'
        rating:
          type: string
        textInput:
          $ref: '#/components/schemas/TextInput'
        skipHours:
          $ref: '#/components/schemas/SkipHoursList'
        skipDays:
          $ref: '#/components/schemas/SkipDaysList'
        item:
          items:
            $ref: '#/components/schemas/RssItem'
          type: array
        otherAttributes:
          additionalProperties:
            type: string
          type: object
      required:
      - description
      - item
      - link
      - title
      type: object
    RssItem:
      example:
        comments: comments
        enclosure:
          length: 2
          type: type
          value: value
          url: url
        link: link
        description: description
        guid:
          isPermaLink: true
          value: value
        title: title
        category:
          domain: domain
          value: value
        pubDate: pubDate
        any:
        - "{}"
        - "{}"
        otherAttributes:
          key: otherAttributes
      properties:
        title:
          type: string
        link:
          type: string
        description:
          type: string
        category:
          $ref: '#/components/schemas/Category'
        comments:
          type: string
        enclosure:
          $ref: '#/components/schemas/Enclosure'
        guid:
          $ref: '#/components/schemas/Guid'
        pubDate:
          type: string
        any:
          items:
            properties: {}
            type: object
          type: array
        otherAttributes:
          additionalProperties:
            type: string
          type: object
      type: object
    SkipDaysList:
      example:
        day:
        - MONDAY
        - MONDAY
      properties:
        day:
          items:
            enum:
            - MONDAY
            - TUESDAY
            - WEDNESDAY
            - THURSDAY
            - FRIDAY
            - SATURDAY
            - SUNDAY
            type: string
          type: array
      type: object
    SkipHoursList:
      example:
        hour:
        - 5
        - 5
      properties:
        hour:
          items:
            format: int32
            type: integer
          type: array
      type: object
    TextInput:
      example:
        name: name
        link: link
        description: description
        title: title
      properties:
        title:
          type: string
        description:
          type: string
        name:
          type: string
        link:
          type: string
      required:
      - description
      - link
      - name
      - title
      type: object
    ProfileDescription:
      example:
        successor: successor
        profile: true
        creatorName: creatorName
        description: description
        derivedfrom: derivedfrom
        dbUserId: 6
        type: type
        userId: userId
        content: content
        recommended: true
        groupName: groupName
        deleted: true
        public: true
        commentsCount: 1
        dbId: 0
        domainName: domainName
        name: name
        registrationDate: 2000-01-23T04:56:07.000+00:00
        href: href
        id: id
        showInEditor: true
        status: DEVELOPMENT
      properties:
        dbId:
          format: int64
          type: integer
        name:
          type: string
        description:
          type: string
        registrationDate:
          format: date-time
          type: string
        creatorName:
          type: string
        dbUserId:
          format: int64
          type: integer
        userId:
          type: string
        domainName:
          type: string
        href:
          type: string
          xml:
            namespace: http://www.w3.org/1999/xlink
        groupName:
          type: string
        status:
          enum:
          - DEVELOPMENT
          - PRODUCTION
          - DEPRECATED
          type: string
        derivedfrom:
          type: string
        successor:
          type: string
        commentsCount:
          format: int32
          type: integer
        content:
          type: string
        deleted:
          type: boolean
        recommended:
          type: boolean
        showInEditor:
          type: boolean
        public:
          type: boolean
        id:
          type: string
        type:
          type: string
        profile:
          type: boolean
      type: object
      xml:
        name: profileDescription
    ProfileDescriptionsObject:
      example:
        profileDescriptions:
        - successor: successor
          profile: true
          creatorName: creatorName
          description: description
          derivedfrom: derivedfrom
          dbUserId: 6
          type: type
          userId: userId
          content: content
          recommended: true
          groupName: groupName
          deleted: true
          public: true
          commentsCount: 1
          dbId: 0
          domainName: domainName
          name: name
          registrationDate: 2000-01-23T04:56:07.000+00:00
          href: href
          id: id
          showInEditor: true
          status: DEVELOPMENT
        - successor: successor
          profile: true
          creatorName: creatorName
          description: description
          derivedfrom: derivedfrom
          dbUserId: 6
          type: type
          userId: userId
          content: content
          recommended: true
          groupName: groupName
          deleted: true
          public: true
          commentsCount: 1
          dbId: 0
          domainName: domainName
          name: name
          registrationDate: 2000-01-23T04:56:07.000+00:00
          href: href
          id: id
          showInEditor: true
          status: DEVELOPMENT
      properties:
        profileDescriptions:
          items:
            $ref: '#/components/schemas/ProfileDescription'
          type: array
          xml:
            name: profileDescription
      type: object
      xml:
        name: profileDescriptions
    BaseDescription:
      example:
        successor: successor
        profile: true
        creatorName: creatorName
        description: description
        derivedfrom: derivedfrom
        dbUserId: 6
        type: type
        userId: userId
        content: content
        recommended: true
        groupName: groupName
        deleted: true
        public: true
        commentsCount: 1
        dbId: 0
        domainName: domainName
        name: name
        registrationDate: 2000-01-23T04:56:07.000+00:00
        href: href
        id: id
        showInEditor: true
        status: DEVELOPMENT
      properties:
        dbId:
          format: int64
          type: integer
        name:
          type: string
        description:
          type: string
        registrationDate:
          format: date-time
          type: string
        creatorName:
          type: string
        dbUserId:
          format: int64
          type: integer
        userId:
          type: string
        domainName:
          type: string
        href:
          type: string
          xml:
            namespace: http://www.w3.org/1999/xlink
        groupName:
          type: string
        status:
          enum:
          - DEVELOPMENT
          - PRODUCTION
          - DEPRECATED
          type: string
        derivedfrom:
          type: string
        successor:
          type: string
        commentsCount:
          format: int32
          type: integer
        content:
          type: string
        deleted:
          type: boolean
        recommended:
          type: boolean
        public:
          type: boolean
        id:
          type: string
        type:
          type: string
        showInEditor:
          type: boolean
        profile:
          type: boolean
      type: object
      xml:
        name: description
    Group:
      example:
        name: name
        id: 0
        ownerId: 6
      properties:
        id:
          format: int64
          type: integer
        name:
          type: string
        ownerId:
          format: int64
          type: integer
      type: object
      xml:
        name: group
    ItemRights:
      example:
        itemId: itemId
        canRead: true
        canWrite: true
        user: user
      properties:
        itemId:
          type: string
        user:
          type: string
        canRead:
          type: boolean
        canWrite:
          type: boolean
      type: object
      xml:
        name: itemRights
    manipulateCommentFromComponent_request:
      properties:
        method:
          type: string
      type: object
    registerComponent_request:
      properties:
        data:
          format: binary
          type: string
        name:
          type: string
        description:
          type: string
        group:
          type: string
        domainName:
          type: string
      type: object
    registerCommentInComponent_request:
      properties:
        data:
          format: binary
          type: string
      type: object
    updateComponentSuccessor_request:
      properties:
        successor:
          type: string
      type: object
    updateProfileStatus_request:
      properties:
        status:
          type: string
      type: object
x-original-swagger-version: "2.0"

