/*
 * Component Registry API
 * Components and profiles registry for the Component Metadata Infrastructure
 *
 * The version of the OpenAPI document: 1.0
 * Contact: cmdi@clarin.eu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package eu.clarin.cmdi.componentregistry.openapi.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import eu.clarin.cmdi.componentregistry.openapi.client.model.AttributeListType;
import eu.clarin.cmdi.componentregistry.openapi.client.model.DocumentationType;
import eu.clarin.cmdi.componentregistry.openapi.client.model.ValueSchemeType;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.dataformat.xml.annotation.*;
import jakarta.xml.bind.annotation.*;
import jakarta.xml.bind.annotation.adapters.*;
import io.github.threetenjaxb.core.*;

/**
 * ElementType
 */
@JsonPropertyOrder({
  ElementType.JSON_PROPERTY_DOCUMENTATION,
  ElementType.JSON_PROPERTY_ATTRIBUTE_LIST,
  ElementType.JSON_PROPERTY_VALUE_SCHEME,
  ElementType.JSON_PROPERTY_AUTO_VALUE,
  ElementType.JSON_PROPERTY_NAME,
  ElementType.JSON_PROPERTY_CONCEPT_LINK,
  ElementType.JSON_PROPERTY_CARDINALITY_MIN,
  ElementType.JSON_PROPERTY_CARDINALITY_MAX,
  ElementType.JSON_PROPERTY_MULTILINGUAL,
  ElementType.JSON_PROPERTY_OTHER_ATTRIBUTES,
  ElementType.JSON_PROPERTY_VALUE_SCHEME_TYPE
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-24T11:08:44.298260+02:00[Europe/Amsterdam]", comments = "Generator version: 7.8.0")
@XmlRootElement(name = "ElementType")
@XmlAccessorType(XmlAccessType.FIELD)
@JacksonXmlRootElement(localName = "ElementType")
public class ElementType {
  public static final String JSON_PROPERTY_DOCUMENTATION = "documentation";
  @XmlElement(name = "Documentation")
  private List<DocumentationType> documentation = new ArrayList<>();

  public static final String JSON_PROPERTY_ATTRIBUTE_LIST = "attributeList";
  @XmlElement(name = "attributeList")
  private AttributeListType attributeList;

  public static final String JSON_PROPERTY_VALUE_SCHEME = "valueScheme";
  @XmlElement(name = "valueScheme")
  private ValueSchemeType valueScheme;

  public static final String JSON_PROPERTY_AUTO_VALUE = "autoValue";
  @XmlElement(name = "AutoValue")
  private List<String> autoValue = new ArrayList<>();

  public static final String JSON_PROPERTY_NAME = "name";
  @XmlAttribute(name = "name")
  private String name;

  public static final String JSON_PROPERTY_CONCEPT_LINK = "conceptLink";
  @XmlAttribute(name = "ConceptLink")
  private String conceptLink;

  public static final String JSON_PROPERTY_CARDINALITY_MIN = "cardinalityMin";
  @XmlElement(name = "cardinalityMin")
  private List<String> cardinalityMin = new ArrayList<>();

  public static final String JSON_PROPERTY_CARDINALITY_MAX = "cardinalityMax";
  @XmlElement(name = "cardinalityMax")
  private List<String> cardinalityMax = new ArrayList<>();

  public static final String JSON_PROPERTY_MULTILINGUAL = "multilingual";
  @XmlAttribute(name = "Multilingual")
  private Boolean multilingual;

  public static final String JSON_PROPERTY_OTHER_ATTRIBUTES = "otherAttributes";
  @XmlElement(name = "otherAttributes")
  private Map<String, String> otherAttributes = new HashMap<>();

  /**
   * Gets or Sets valueSchemeType
   */
  @XmlType(name="ValueSchemeTypeEnum")
  @XmlEnum(String.class)
  public enum ValueSchemeTypeEnum {
    @XmlEnumValue("BOOLEAN")
    BOOLEAN("BOOLEAN"),
    
    @XmlEnumValue("DECIMAL")
    DECIMAL("DECIMAL"),
    
    @XmlEnumValue("FLOAT")
    FLOAT("FLOAT"),
    
    @XmlEnumValue("INT")
    INT("INT"),
    
    @XmlEnumValue("STRING")
    STRING("STRING"),
    
    @XmlEnumValue("ANY_URI")
    ANY_URI("ANY_URI"),
    
    @XmlEnumValue("DATE")
    DATE("DATE"),
    
    @XmlEnumValue("G_DAY")
    G_DAY("G_DAY"),
    
    @XmlEnumValue("G_MONTH")
    G_MONTH("G_MONTH"),
    
    @XmlEnumValue("G_YEAR")
    G_YEAR("G_YEAR"),
    
    @XmlEnumValue("TIME")
    TIME("TIME"),
    
    @XmlEnumValue("DATE_TIME")
    DATE_TIME("DATE_TIME");

    private String value;

    ValueSchemeTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ValueSchemeTypeEnum fromValue(String value) {
      for (ValueSchemeTypeEnum b : ValueSchemeTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_VALUE_SCHEME_TYPE = "ValueSchemeType";
  @XmlAttribute(name = "ValueScheme")
  private ValueSchemeTypeEnum valueSchemeType;

  public ElementType() {
  }

  public ElementType documentation(List<DocumentationType> documentation) {
    
    this.documentation = documentation;
    return this;
  }

  public ElementType addDocumentationItem(DocumentationType documentationItem) {
    if (this.documentation == null) {
      this.documentation = new ArrayList<>();
    }
    this.documentation.add(documentationItem);
    return this;
  }

  /**
   * Get documentation
   * @return documentation
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DOCUMENTATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "Documentation")
  @JacksonXmlElementWrapper(useWrapping = false)

  public List<DocumentationType> getDocumentation() {
    return documentation;
  }


  @JsonProperty(JSON_PROPERTY_DOCUMENTATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "Documentation")
  @JacksonXmlElementWrapper(useWrapping = false)
  public void setDocumentation(List<DocumentationType> documentation) {
    this.documentation = documentation;
  }

  public ElementType attributeList(AttributeListType attributeList) {
    
    this.attributeList = attributeList;
    return this;
  }

  /**
   * Get attributeList
   * @return attributeList
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ATTRIBUTE_LIST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "attributeList")

  public AttributeListType getAttributeList() {
    return attributeList;
  }


  @JsonProperty(JSON_PROPERTY_ATTRIBUTE_LIST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "attributeList")
  public void setAttributeList(AttributeListType attributeList) {
    this.attributeList = attributeList;
  }

  public ElementType valueScheme(ValueSchemeType valueScheme) {
    
    this.valueScheme = valueScheme;
    return this;
  }

  /**
   * Get valueScheme
   * @return valueScheme
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VALUE_SCHEME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "valueScheme")

  public ValueSchemeType getValueScheme() {
    return valueScheme;
  }


  @JsonProperty(JSON_PROPERTY_VALUE_SCHEME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "valueScheme")
  public void setValueScheme(ValueSchemeType valueScheme) {
    this.valueScheme = valueScheme;
  }

  public ElementType autoValue(List<String> autoValue) {
    
    this.autoValue = autoValue;
    return this;
  }

  public ElementType addAutoValueItem(String autoValueItem) {
    if (this.autoValue == null) {
      this.autoValue = new ArrayList<>();
    }
    this.autoValue.add(autoValueItem);
    return this;
  }

  /**
   * Get autoValue
   * @return autoValue
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AUTO_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "AutoValue")
  @JacksonXmlElementWrapper(useWrapping = false)

  public List<String> getAutoValue() {
    return autoValue;
  }


  @JsonProperty(JSON_PROPERTY_AUTO_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "AutoValue")
  @JacksonXmlElementWrapper(useWrapping = false)
  public void setAutoValue(List<String> autoValue) {
    this.autoValue = autoValue;
  }

  public ElementType name(String name) {
    
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "name", isAttribute = true)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "name", isAttribute = true)
  public void setName(String name) {
    this.name = name;
  }

  public ElementType conceptLink(String conceptLink) {
    
    this.conceptLink = conceptLink;
    return this;
  }

  /**
   * Get conceptLink
   * @return conceptLink
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CONCEPT_LINK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "ConceptLink", isAttribute = true)

  public String getConceptLink() {
    return conceptLink;
  }


  @JsonProperty(JSON_PROPERTY_CONCEPT_LINK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "ConceptLink", isAttribute = true)
  public void setConceptLink(String conceptLink) {
    this.conceptLink = conceptLink;
  }

  public ElementType cardinalityMin(List<String> cardinalityMin) {
    
    this.cardinalityMin = cardinalityMin;
    return this;
  }

  public ElementType addCardinalityMinItem(String cardinalityMinItem) {
    if (this.cardinalityMin == null) {
      this.cardinalityMin = new ArrayList<>();
    }
    this.cardinalityMin.add(cardinalityMinItem);
    return this;
  }

  /**
   * Get cardinalityMin
   * @return cardinalityMin
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CARDINALITY_MIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "cardinalityMin")
  @JacksonXmlElementWrapper(useWrapping = false)

  public List<String> getCardinalityMin() {
    return cardinalityMin;
  }


  @JsonProperty(JSON_PROPERTY_CARDINALITY_MIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "cardinalityMin")
  @JacksonXmlElementWrapper(useWrapping = false)
  public void setCardinalityMin(List<String> cardinalityMin) {
    this.cardinalityMin = cardinalityMin;
  }

  public ElementType cardinalityMax(List<String> cardinalityMax) {
    
    this.cardinalityMax = cardinalityMax;
    return this;
  }

  public ElementType addCardinalityMaxItem(String cardinalityMaxItem) {
    if (this.cardinalityMax == null) {
      this.cardinalityMax = new ArrayList<>();
    }
    this.cardinalityMax.add(cardinalityMaxItem);
    return this;
  }

  /**
   * Get cardinalityMax
   * @return cardinalityMax
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CARDINALITY_MAX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "cardinalityMax")
  @JacksonXmlElementWrapper(useWrapping = false)

  public List<String> getCardinalityMax() {
    return cardinalityMax;
  }


  @JsonProperty(JSON_PROPERTY_CARDINALITY_MAX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "cardinalityMax")
  @JacksonXmlElementWrapper(useWrapping = false)
  public void setCardinalityMax(List<String> cardinalityMax) {
    this.cardinalityMax = cardinalityMax;
  }

  public ElementType multilingual(Boolean multilingual) {
    
    this.multilingual = multilingual;
    return this;
  }

  /**
   * Get multilingual
   * @return multilingual
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MULTILINGUAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "Multilingual", isAttribute = true)

  public Boolean getMultilingual() {
    return multilingual;
  }


  @JsonProperty(JSON_PROPERTY_MULTILINGUAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "Multilingual", isAttribute = true)
  public void setMultilingual(Boolean multilingual) {
    this.multilingual = multilingual;
  }

  public ElementType otherAttributes(Map<String, String> otherAttributes) {
    
    this.otherAttributes = otherAttributes;
    return this;
  }

  public ElementType putOtherAttributesItem(String key, String otherAttributesItem) {
    if (this.otherAttributes == null) {
      this.otherAttributes = new HashMap<>();
    }
    this.otherAttributes.put(key, otherAttributesItem);
    return this;
  }

  /**
   * Get otherAttributes
   * @return otherAttributes
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OTHER_ATTRIBUTES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "otherAttributes")
  @JacksonXmlElementWrapper(useWrapping = false)

  public Map<String, String> getOtherAttributes() {
    return otherAttributes;
  }


  @JsonProperty(JSON_PROPERTY_OTHER_ATTRIBUTES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "otherAttributes")
  @JacksonXmlElementWrapper(useWrapping = false)
  public void setOtherAttributes(Map<String, String> otherAttributes) {
    this.otherAttributes = otherAttributes;
  }

  public ElementType valueSchemeType(ValueSchemeTypeEnum valueSchemeType) {
    
    this.valueSchemeType = valueSchemeType;
    return this;
  }

  /**
   * Get valueSchemeType
   * @return valueSchemeType
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VALUE_SCHEME_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "ValueScheme", isAttribute = true)

  public ValueSchemeTypeEnum getValueSchemeType() {
    return valueSchemeType;
  }


  @JsonProperty(JSON_PROPERTY_VALUE_SCHEME_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "ValueScheme", isAttribute = true)
  public void setValueSchemeType(ValueSchemeTypeEnum valueSchemeType) {
    this.valueSchemeType = valueSchemeType;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ElementType elementType = (ElementType) o;
    return Objects.equals(this.documentation, elementType.documentation) &&
        Objects.equals(this.attributeList, elementType.attributeList) &&
        Objects.equals(this.valueScheme, elementType.valueScheme) &&
        Objects.equals(this.autoValue, elementType.autoValue) &&
        Objects.equals(this.name, elementType.name) &&
        Objects.equals(this.conceptLink, elementType.conceptLink) &&
        Objects.equals(this.cardinalityMin, elementType.cardinalityMin) &&
        Objects.equals(this.cardinalityMax, elementType.cardinalityMax) &&
        Objects.equals(this.multilingual, elementType.multilingual) &&
        Objects.equals(this.otherAttributes, elementType.otherAttributes) &&
        Objects.equals(this.valueSchemeType, elementType.valueSchemeType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(documentation, attributeList, valueScheme, autoValue, name, conceptLink, cardinalityMin, cardinalityMax, multilingual, otherAttributes, valueSchemeType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ElementType {\n");
    sb.append("    documentation: ").append(toIndentedString(documentation)).append("\n");
    sb.append("    attributeList: ").append(toIndentedString(attributeList)).append("\n");
    sb.append("    valueScheme: ").append(toIndentedString(valueScheme)).append("\n");
    sb.append("    autoValue: ").append(toIndentedString(autoValue)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    conceptLink: ").append(toIndentedString(conceptLink)).append("\n");
    sb.append("    cardinalityMin: ").append(toIndentedString(cardinalityMin)).append("\n");
    sb.append("    cardinalityMax: ").append(toIndentedString(cardinalityMax)).append("\n");
    sb.append("    multilingual: ").append(toIndentedString(multilingual)).append("\n");
    sb.append("    otherAttributes: ").append(toIndentedString(otherAttributes)).append("\n");
    sb.append("    valueSchemeType: ").append(toIndentedString(valueSchemeType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

