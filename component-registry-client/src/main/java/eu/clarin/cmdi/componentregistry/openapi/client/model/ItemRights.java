/*
 * CLARIN Component Registry
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package eu.clarin.cmdi.componentregistry.openapi.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * ItemRights
 */
@JsonPropertyOrder({
  ItemRights.JSON_PROPERTY_ITEM_ID,
  ItemRights.JSON_PROPERTY_USER,
  ItemRights.JSON_PROPERTY_CAN_READ,
  ItemRights.JSON_PROPERTY_CAN_WRITE
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-09-17T13:10:36.372458+03:00[Europe/Riga]", comments = "Generator version: 7.8.0")
public class ItemRights {
  public static final String JSON_PROPERTY_ITEM_ID = "itemId";
  private String itemId;

  public static final String JSON_PROPERTY_USER = "user";
  private String user;

  public static final String JSON_PROPERTY_CAN_READ = "canRead";
  private Boolean canRead;

  public static final String JSON_PROPERTY_CAN_WRITE = "canWrite";
  private Boolean canWrite;

  public ItemRights() {
  }

  public ItemRights itemId(String itemId) {
    
    this.itemId = itemId;
    return this;
  }

  /**
   * Get itemId
   * @return itemId
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ITEM_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getItemId() {
    return itemId;
  }


  @JsonProperty(JSON_PROPERTY_ITEM_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setItemId(String itemId) {
    this.itemId = itemId;
  }

  public ItemRights user(String user) {
    
    this.user = user;
    return this;
  }

  /**
   * Get user
   * @return user
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_USER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUser() {
    return user;
  }


  @JsonProperty(JSON_PROPERTY_USER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUser(String user) {
    this.user = user;
  }

  public ItemRights canRead(Boolean canRead) {
    
    this.canRead = canRead;
    return this;
  }

  /**
   * Get canRead
   * @return canRead
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CAN_READ)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getCanRead() {
    return canRead;
  }


  @JsonProperty(JSON_PROPERTY_CAN_READ)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCanRead(Boolean canRead) {
    this.canRead = canRead;
  }

  public ItemRights canWrite(Boolean canWrite) {
    
    this.canWrite = canWrite;
    return this;
  }

  /**
   * Get canWrite
   * @return canWrite
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CAN_WRITE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getCanWrite() {
    return canWrite;
  }


  @JsonProperty(JSON_PROPERTY_CAN_WRITE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCanWrite(Boolean canWrite) {
    this.canWrite = canWrite;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ItemRights itemRights = (ItemRights) o;
    return Objects.equals(this.itemId, itemRights.itemId) &&
        Objects.equals(this.user, itemRights.user) &&
        Objects.equals(this.canRead, itemRights.canRead) &&
        Objects.equals(this.canWrite, itemRights.canWrite);
  }

  @Override
  public int hashCode() {
    return Objects.hash(itemId, user, canRead, canWrite);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ItemRights {\n");
    sb.append("    itemId: ").append(toIndentedString(itemId)).append("\n");
    sb.append("    user: ").append(toIndentedString(user)).append("\n");
    sb.append("    canRead: ").append(toIndentedString(canRead)).append("\n");
    sb.append("    canWrite: ").append(toIndentedString(canWrite)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

