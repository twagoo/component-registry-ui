/*
 * Component Registry API
 * Components and profiles registry for the Component Metadata Infrastructure
 *
 * The version of the OpenAPI document: 1.0
 * Contact: cmdi@clarin.eu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package eu.clarin.cmdi.componentregistry.openapi.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.dataformat.xml.annotation.*;
import jakarta.xml.bind.annotation.*;
import jakarta.xml.bind.annotation.adapters.*;
import io.github.threetenjaxb.core.*;

/**
 * Header
 */
@JsonPropertyOrder({
  Header.JSON_PROPERTY_ID,
  Header.JSON_PROPERTY_NAME,
  Header.JSON_PROPERTY_DESCRIPTION,
  Header.JSON_PROPERTY_STATUS,
  Header.JSON_PROPERTY_STATUS_COMMENT,
  Header.JSON_PROPERTY_SUCCESSOR,
  Header.JSON_PROPERTY_DERIVED_FROM
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-24T11:08:44.298260+02:00[Europe/Amsterdam]", comments = "Generator version: 7.8.0")
@XmlRootElement(name = "Header")
@XmlAccessorType(XmlAccessType.FIELD)
@JacksonXmlRootElement(localName = "Header")
public class Header {
  public static final String JSON_PROPERTY_ID = "id";
  @XmlElement(name = "ID")
  private String id;

  public static final String JSON_PROPERTY_NAME = "name";
  @XmlElement(name = "Name")
  private String name;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  @XmlElement(name = "Description")
  private String description;

  public static final String JSON_PROPERTY_STATUS = "status";
  @XmlElement(name = "Status")
  private String status;

  public static final String JSON_PROPERTY_STATUS_COMMENT = "statusComment";
  @XmlElement(name = "StatusComment")
  private String statusComment;

  public static final String JSON_PROPERTY_SUCCESSOR = "successor";
  @XmlElement(name = "Successor")
  private String successor;

  public static final String JSON_PROPERTY_DERIVED_FROM = "derivedFrom";
  @XmlElement(name = "DerivedFrom")
  private String derivedFrom;

  public Header() {
  }

  public Header id(String id) {
    
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  @JacksonXmlProperty(localName = "ID")

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  @JacksonXmlProperty(localName = "ID")
  public void setId(String id) {
    this.id = id;
  }

  public Header name(String name) {
    
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  @JacksonXmlProperty(localName = "Name")

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  @JacksonXmlProperty(localName = "Name")
  public void setName(String name) {
    this.name = name;
  }

  public Header description(String description) {
    
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "Description")

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "Description")
  public void setDescription(String description) {
    this.description = description;
  }

  public Header status(String status) {
    
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  @JacksonXmlProperty(localName = "Status")

  public String getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  @JacksonXmlProperty(localName = "Status")
  public void setStatus(String status) {
    this.status = status;
  }

  public Header statusComment(String statusComment) {
    
    this.statusComment = statusComment;
    return this;
  }

  /**
   * Get statusComment
   * @return statusComment
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STATUS_COMMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "StatusComment")

  public String getStatusComment() {
    return statusComment;
  }


  @JsonProperty(JSON_PROPERTY_STATUS_COMMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "StatusComment")
  public void setStatusComment(String statusComment) {
    this.statusComment = statusComment;
  }

  public Header successor(String successor) {
    
    this.successor = successor;
    return this;
  }

  /**
   * Get successor
   * @return successor
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SUCCESSOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "Successor")

  public String getSuccessor() {
    return successor;
  }


  @JsonProperty(JSON_PROPERTY_SUCCESSOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "Successor")
  public void setSuccessor(String successor) {
    this.successor = successor;
  }

  public Header derivedFrom(String derivedFrom) {
    
    this.derivedFrom = derivedFrom;
    return this;
  }

  /**
   * Get derivedFrom
   * @return derivedFrom
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DERIVED_FROM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "DerivedFrom")

  public String getDerivedFrom() {
    return derivedFrom;
  }


  @JsonProperty(JSON_PROPERTY_DERIVED_FROM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "DerivedFrom")
  public void setDerivedFrom(String derivedFrom) {
    this.derivedFrom = derivedFrom;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Header header = (Header) o;
    return Objects.equals(this.id, header.id) &&
        Objects.equals(this.name, header.name) &&
        Objects.equals(this.description, header.description) &&
        Objects.equals(this.status, header.status) &&
        Objects.equals(this.statusComment, header.statusComment) &&
        Objects.equals(this.successor, header.successor) &&
        Objects.equals(this.derivedFrom, header.derivedFrom);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, description, status, statusComment, successor, derivedFrom);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Header {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    statusComment: ").append(toIndentedString(statusComment)).append("\n");
    sb.append("    successor: ").append(toIndentedString(successor)).append("\n");
    sb.append("    derivedFrom: ").append(toIndentedString(derivedFrom)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

