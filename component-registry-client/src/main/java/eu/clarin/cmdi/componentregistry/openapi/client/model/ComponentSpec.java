/*
 * Component Registry API
 * Components and profiles registry for the Component Metadata Infrastructure
 *
 * The version of the OpenAPI document: 1.0
 * Contact: cmdi@clarin.eu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package eu.clarin.cmdi.componentregistry.openapi.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import eu.clarin.cmdi.componentregistry.openapi.client.model.ComponentType;
import eu.clarin.cmdi.componentregistry.openapi.client.model.Header;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.dataformat.xml.annotation.*;
import jakarta.xml.bind.annotation.*;
import jakarta.xml.bind.annotation.adapters.*;
import io.github.threetenjaxb.core.*;

/**
 * ComponentSpec
 */
@JsonPropertyOrder({
  ComponentSpec.JSON_PROPERTY_HEADER,
  ComponentSpec.JSON_PROPERTY_COMPONENT,
  ComponentSpec.JSON_PROPERTY_IS_PROFILE,
  ComponentSpec.JSON_PROPERTY_CMDVERSION,
  ComponentSpec.JSON_PROPERTY_CMDORIGINAL_VERSION
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-24T16:54:28.781907+02:00[Europe/Amsterdam]", comments = "Generator version: 7.8.0")
@XmlRootElement(name = "ComponentSpec")
@XmlAccessorType(XmlAccessType.FIELD)
@JacksonXmlRootElement(localName = "ComponentSpec")
public class ComponentSpec {
  public static final String JSON_PROPERTY_HEADER = "header";
  @XmlElement(name = "header")
  private Header header;

  public static final String JSON_PROPERTY_COMPONENT = "component";
  @XmlElement(name = "component")
  private ComponentType component;

  public static final String JSON_PROPERTY_IS_PROFILE = "isProfile";
  @XmlAttribute(name = "isProfile")
  private Boolean isProfile;

  public static final String JSON_PROPERTY_CMDVERSION = "cmdversion";
  @XmlElement(name = "cmdversion")
  private String cmdversion;

  public static final String JSON_PROPERTY_CMDORIGINAL_VERSION = "cmdoriginalVersion";
  @XmlElement(name = "cmdoriginalVersion")
  private String cmdoriginalVersion;

  public ComponentSpec() {
  }

  public ComponentSpec header(Header header) {
    
    this.header = header;
    return this;
  }

  /**
   * Get header
   * @return header
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_HEADER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  @JacksonXmlProperty(localName = "header")

  public Header getHeader() {
    return header;
  }


  @JsonProperty(JSON_PROPERTY_HEADER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  @JacksonXmlProperty(localName = "header")
  public void setHeader(Header header) {
    this.header = header;
  }

  public ComponentSpec component(ComponentType component) {
    
    this.component = component;
    return this;
  }

  /**
   * Get component
   * @return component
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_COMPONENT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  @JacksonXmlProperty(localName = "component")

  public ComponentType getComponent() {
    return component;
  }


  @JsonProperty(JSON_PROPERTY_COMPONENT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  @JacksonXmlProperty(localName = "component")
  public void setComponent(ComponentType component) {
    this.component = component;
  }

  public ComponentSpec isProfile(Boolean isProfile) {
    
    this.isProfile = isProfile;
    return this;
  }

  /**
   * Get isProfile
   * @return isProfile
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IS_PROFILE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "isProfile", isAttribute = true)

  public Boolean getIsProfile() {
    return isProfile;
  }


  @JsonProperty(JSON_PROPERTY_IS_PROFILE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "isProfile", isAttribute = true)
  public void setIsProfile(Boolean isProfile) {
    this.isProfile = isProfile;
  }

  public ComponentSpec cmdversion(String cmdversion) {
    
    this.cmdversion = cmdversion;
    return this;
  }

  /**
   * Get cmdversion
   * @return cmdversion
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CMDVERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "cmdversion")

  public String getCmdversion() {
    return cmdversion;
  }


  @JsonProperty(JSON_PROPERTY_CMDVERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "cmdversion")
  public void setCmdversion(String cmdversion) {
    this.cmdversion = cmdversion;
  }

  public ComponentSpec cmdoriginalVersion(String cmdoriginalVersion) {
    
    this.cmdoriginalVersion = cmdoriginalVersion;
    return this;
  }

  /**
   * Get cmdoriginalVersion
   * @return cmdoriginalVersion
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CMDORIGINAL_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "cmdoriginalVersion")

  public String getCmdoriginalVersion() {
    return cmdoriginalVersion;
  }


  @JsonProperty(JSON_PROPERTY_CMDORIGINAL_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "cmdoriginalVersion")
  public void setCmdoriginalVersion(String cmdoriginalVersion) {
    this.cmdoriginalVersion = cmdoriginalVersion;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ComponentSpec componentSpec = (ComponentSpec) o;
    return Objects.equals(this.header, componentSpec.header) &&
        Objects.equals(this.component, componentSpec.component) &&
        Objects.equals(this.isProfile, componentSpec.isProfile) &&
        Objects.equals(this.cmdversion, componentSpec.cmdversion) &&
        Objects.equals(this.cmdoriginalVersion, componentSpec.cmdoriginalVersion);
  }

  @Override
  public int hashCode() {
    return Objects.hash(header, component, isProfile, cmdversion, cmdoriginalVersion);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ComponentSpec {\n");
    sb.append("    header: ").append(toIndentedString(header)).append("\n");
    sb.append("    component: ").append(toIndentedString(component)).append("\n");
    sb.append("    isProfile: ").append(toIndentedString(isProfile)).append("\n");
    sb.append("    cmdversion: ").append(toIndentedString(cmdversion)).append("\n");
    sb.append("    cmdoriginalVersion: ").append(toIndentedString(cmdoriginalVersion)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

