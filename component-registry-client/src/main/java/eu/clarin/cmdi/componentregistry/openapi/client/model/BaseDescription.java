/*
 * Component Registry API
 * Components and profiles registry for the Component Metadata Infrastructure
 *
 * The version of the OpenAPI document: 1.0
 * Contact: cmdi@clarin.eu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package eu.clarin.cmdi.componentregistry.openapi.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.OffsetDateTime;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.dataformat.xml.annotation.*;
import jakarta.xml.bind.annotation.*;
import jakarta.xml.bind.annotation.adapters.*;
import io.github.threetenjaxb.core.*;

/**
 * BaseDescription
 */
@JsonPropertyOrder({
  BaseDescription.JSON_PROPERTY_DB_ID,
  BaseDescription.JSON_PROPERTY_NAME,
  BaseDescription.JSON_PROPERTY_DESCRIPTION,
  BaseDescription.JSON_PROPERTY_REGISTRATION_DATE,
  BaseDescription.JSON_PROPERTY_CREATOR_NAME,
  BaseDescription.JSON_PROPERTY_DB_USER_ID,
  BaseDescription.JSON_PROPERTY_USER_ID,
  BaseDescription.JSON_PROPERTY_DOMAIN_NAME,
  BaseDescription.JSON_PROPERTY_HREF,
  BaseDescription.JSON_PROPERTY_GROUP_NAME,
  BaseDescription.JSON_PROPERTY_STATUS,
  BaseDescription.JSON_PROPERTY_DERIVEDFROM,
  BaseDescription.JSON_PROPERTY_SUCCESSOR,
  BaseDescription.JSON_PROPERTY_COMMENTS_COUNT,
  BaseDescription.JSON_PROPERTY_CONTENT,
  BaseDescription.JSON_PROPERTY_DELETED,
  BaseDescription.JSON_PROPERTY_RECOMMENDED,
  BaseDescription.JSON_PROPERTY_PUBLIC,
  BaseDescription.JSON_PROPERTY_ID,
  BaseDescription.JSON_PROPERTY_SHOW_IN_EDITOR,
  BaseDescription.JSON_PROPERTY_IS_PUBLIC
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-11T18:59:51.827527+03:00[Europe/Riga]", comments = "Generator version: 7.8.0")
@XmlRootElement(name = "description")
@XmlAccessorType(XmlAccessType.FIELD)
@JacksonXmlRootElement(localName = "description")
public class BaseDescription {
  public static final String JSON_PROPERTY_DB_ID = "dbId";
  @XmlElement(name = "dbId")
  private Long dbId;

  public static final String JSON_PROPERTY_NAME = "name";
  @XmlElement(name = "name")
  private String name;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  @XmlElement(name = "description")
  private String description;

  public static final String JSON_PROPERTY_REGISTRATION_DATE = "registrationDate";
  @XmlElement(name = "registrationDate")
  @XmlJavaTypeAdapter(OffsetDateTimeXmlAdapter.class)
  private OffsetDateTime registrationDate;

  public static final String JSON_PROPERTY_CREATOR_NAME = "creatorName";
  @XmlElement(name = "creatorName")
  private String creatorName;

  public static final String JSON_PROPERTY_DB_USER_ID = "dbUserId";
  @XmlElement(name = "dbUserId")
  private Long dbUserId;

  public static final String JSON_PROPERTY_USER_ID = "userId";
  @XmlElement(name = "userId")
  private String userId;

  public static final String JSON_PROPERTY_DOMAIN_NAME = "domainName";
  @XmlElement(name = "domainName")
  private String domainName;

  public static final String JSON_PROPERTY_HREF = "href";
  @XmlElement(name = "href", namespace = "http://www.w3.org/1999/xlink")
  private String href;

  public static final String JSON_PROPERTY_GROUP_NAME = "groupName";
  @XmlElement(name = "groupName")
  private String groupName;

  /**
   * Gets or Sets status
   */
  @XmlType(name="StatusEnum")
  @XmlEnum(String.class)
  public enum StatusEnum {
    @XmlEnumValue("development")
    DEVELOPMENT("development"),
    
    @XmlEnumValue("production")
    PRODUCTION("production"),
    
    @XmlEnumValue("deprecated")
    DEPRECATED("deprecated");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_STATUS = "status";
  @XmlElement(name = "status")
  private StatusEnum status;

  public static final String JSON_PROPERTY_DERIVEDFROM = "derivedfrom";
  @XmlElement(name = "derivedfrom")
  private String derivedfrom;

  public static final String JSON_PROPERTY_SUCCESSOR = "successor";
  @XmlElement(name = "successor")
  private String successor;

  public static final String JSON_PROPERTY_COMMENTS_COUNT = "commentsCount";
  @XmlElement(name = "commentsCount")
  private Integer commentsCount;

  public static final String JSON_PROPERTY_CONTENT = "content";
  @XmlElement(name = "content")
  private String content;

  public static final String JSON_PROPERTY_DELETED = "deleted";
  @XmlElement(name = "deleted")
  private Boolean deleted;

  public static final String JSON_PROPERTY_RECOMMENDED = "recommended";
  @XmlElement(name = "recommended")
  private Boolean recommended;

  public static final String JSON_PROPERTY_PUBLIC = "public";
  @XmlElement(name = "public")
  private Boolean _public;

  public static final String JSON_PROPERTY_ID = "id";
  @XmlElement(name = "id")
  private String id;

  public static final String JSON_PROPERTY_SHOW_IN_EDITOR = "showInEditor";
  @XmlElement(name = "showInEditor")
  private Boolean showInEditor;

  public static final String JSON_PROPERTY_IS_PUBLIC = "isPublic";
  @XmlElement(name = "isPublic")
  private Boolean isPublic;

  public BaseDescription() {
  }

  public BaseDescription dbId(Long dbId) {
    
    this.dbId = dbId;
    return this;
  }

  /**
   * Get dbId
   * @return dbId
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DB_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "dbId")

  public Long getDbId() {
    return dbId;
  }


  @JsonProperty(JSON_PROPERTY_DB_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "dbId")
  public void setDbId(Long dbId) {
    this.dbId = dbId;
  }

  public BaseDescription name(String name) {
    
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "name")

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "name")
  public void setName(String name) {
    this.name = name;
  }

  public BaseDescription description(String description) {
    
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "description")

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "description")
  public void setDescription(String description) {
    this.description = description;
  }

  public BaseDescription registrationDate(OffsetDateTime registrationDate) {
    
    this.registrationDate = registrationDate;
    return this;
  }

  /**
   * Get registrationDate
   * @return registrationDate
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REGISTRATION_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "registrationDate")

  public OffsetDateTime getRegistrationDate() {
    return registrationDate;
  }


  @JsonProperty(JSON_PROPERTY_REGISTRATION_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "registrationDate")
  public void setRegistrationDate(OffsetDateTime registrationDate) {
    this.registrationDate = registrationDate;
  }

  public BaseDescription creatorName(String creatorName) {
    
    this.creatorName = creatorName;
    return this;
  }

  /**
   * Get creatorName
   * @return creatorName
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATOR_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "creatorName")

  public String getCreatorName() {
    return creatorName;
  }


  @JsonProperty(JSON_PROPERTY_CREATOR_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "creatorName")
  public void setCreatorName(String creatorName) {
    this.creatorName = creatorName;
  }

  public BaseDescription dbUserId(Long dbUserId) {
    
    this.dbUserId = dbUserId;
    return this;
  }

  /**
   * Get dbUserId
   * @return dbUserId
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DB_USER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "dbUserId")

  public Long getDbUserId() {
    return dbUserId;
  }


  @JsonProperty(JSON_PROPERTY_DB_USER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "dbUserId")
  public void setDbUserId(Long dbUserId) {
    this.dbUserId = dbUserId;
  }

  public BaseDescription userId(String userId) {
    
    this.userId = userId;
    return this;
  }

  /**
   * Get userId
   * @return userId
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_USER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "userId")

  public String getUserId() {
    return userId;
  }


  @JsonProperty(JSON_PROPERTY_USER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "userId")
  public void setUserId(String userId) {
    this.userId = userId;
  }

  public BaseDescription domainName(String domainName) {
    
    this.domainName = domainName;
    return this;
  }

  /**
   * Get domainName
   * @return domainName
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DOMAIN_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "domainName")

  public String getDomainName() {
    return domainName;
  }


  @JsonProperty(JSON_PROPERTY_DOMAIN_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "domainName")
  public void setDomainName(String domainName) {
    this.domainName = domainName;
  }

  public BaseDescription href(String href) {
    
    this.href = href;
    return this;
  }

  /**
   * Get href
   * @return href
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HREF)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "href", namespace = "http://www.w3.org/1999/xlink")

  public String getHref() {
    return href;
  }


  @JsonProperty(JSON_PROPERTY_HREF)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "href", namespace = "http://www.w3.org/1999/xlink")
  public void setHref(String href) {
    this.href = href;
  }

  public BaseDescription groupName(String groupName) {
    
    this.groupName = groupName;
    return this;
  }

  /**
   * Get groupName
   * @return groupName
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_GROUP_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "groupName")

  public String getGroupName() {
    return groupName;
  }


  @JsonProperty(JSON_PROPERTY_GROUP_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "groupName")
  public void setGroupName(String groupName) {
    this.groupName = groupName;
  }

  public BaseDescription status(StatusEnum status) {
    
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "status")

  public StatusEnum getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "status")
  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public BaseDescription derivedfrom(String derivedfrom) {
    
    this.derivedfrom = derivedfrom;
    return this;
  }

  /**
   * Get derivedfrom
   * @return derivedfrom
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DERIVEDFROM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "derivedfrom")

  public String getDerivedfrom() {
    return derivedfrom;
  }


  @JsonProperty(JSON_PROPERTY_DERIVEDFROM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "derivedfrom")
  public void setDerivedfrom(String derivedfrom) {
    this.derivedfrom = derivedfrom;
  }

  public BaseDescription successor(String successor) {
    
    this.successor = successor;
    return this;
  }

  /**
   * Get successor
   * @return successor
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SUCCESSOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "successor")

  public String getSuccessor() {
    return successor;
  }


  @JsonProperty(JSON_PROPERTY_SUCCESSOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "successor")
  public void setSuccessor(String successor) {
    this.successor = successor;
  }

  public BaseDescription commentsCount(Integer commentsCount) {
    
    this.commentsCount = commentsCount;
    return this;
  }

  /**
   * Get commentsCount
   * @return commentsCount
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COMMENTS_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "commentsCount")

  public Integer getCommentsCount() {
    return commentsCount;
  }


  @JsonProperty(JSON_PROPERTY_COMMENTS_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "commentsCount")
  public void setCommentsCount(Integer commentsCount) {
    this.commentsCount = commentsCount;
  }

  public BaseDescription content(String content) {
    
    this.content = content;
    return this;
  }

  /**
   * Get content
   * @return content
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CONTENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "content")

  public String getContent() {
    return content;
  }


  @JsonProperty(JSON_PROPERTY_CONTENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "content")
  public void setContent(String content) {
    this.content = content;
  }

  public BaseDescription deleted(Boolean deleted) {
    
    this.deleted = deleted;
    return this;
  }

  /**
   * Get deleted
   * @return deleted
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "deleted")

  public Boolean getDeleted() {
    return deleted;
  }


  @JsonProperty(JSON_PROPERTY_DELETED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "deleted")
  public void setDeleted(Boolean deleted) {
    this.deleted = deleted;
  }

  public BaseDescription recommended(Boolean recommended) {
    
    this.recommended = recommended;
    return this;
  }

  /**
   * Get recommended
   * @return recommended
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RECOMMENDED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "recommended")

  public Boolean getRecommended() {
    return recommended;
  }


  @JsonProperty(JSON_PROPERTY_RECOMMENDED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "recommended")
  public void setRecommended(Boolean recommended) {
    this.recommended = recommended;
  }

  public BaseDescription _public(Boolean _public) {
    
    this._public = _public;
    return this;
  }

  /**
   * Get _public
   * @return _public
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PUBLIC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "public")

  public Boolean getPublic() {
    return _public;
  }


  @JsonProperty(JSON_PROPERTY_PUBLIC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "public")
  public void setPublic(Boolean _public) {
    this._public = _public;
  }

  public BaseDescription id(String id) {
    
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "id")

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "id")
  public void setId(String id) {
    this.id = id;
  }

  public BaseDescription showInEditor(Boolean showInEditor) {
    
    this.showInEditor = showInEditor;
    return this;
  }

  /**
   * Get showInEditor
   * @return showInEditor
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SHOW_IN_EDITOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "showInEditor")

  public Boolean getShowInEditor() {
    return showInEditor;
  }


  @JsonProperty(JSON_PROPERTY_SHOW_IN_EDITOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "showInEditor")
  public void setShowInEditor(Boolean showInEditor) {
    this.showInEditor = showInEditor;
  }

  public BaseDescription isPublic(Boolean isPublic) {
    
    this.isPublic = isPublic;
    return this;
  }

  /**
   * Get isPublic
   * @return isPublic
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IS_PUBLIC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "isPublic")

  public Boolean getIsPublic() {
    return isPublic;
  }


  @JsonProperty(JSON_PROPERTY_IS_PUBLIC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "isPublic")
  public void setIsPublic(Boolean isPublic) {
    this.isPublic = isPublic;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BaseDescription baseDescription = (BaseDescription) o;
    return Objects.equals(this.dbId, baseDescription.dbId) &&
        Objects.equals(this.name, baseDescription.name) &&
        Objects.equals(this.description, baseDescription.description) &&
        Objects.equals(this.registrationDate, baseDescription.registrationDate) &&
        Objects.equals(this.creatorName, baseDescription.creatorName) &&
        Objects.equals(this.dbUserId, baseDescription.dbUserId) &&
        Objects.equals(this.userId, baseDescription.userId) &&
        Objects.equals(this.domainName, baseDescription.domainName) &&
        Objects.equals(this.href, baseDescription.href) &&
        Objects.equals(this.groupName, baseDescription.groupName) &&
        Objects.equals(this.status, baseDescription.status) &&
        Objects.equals(this.derivedfrom, baseDescription.derivedfrom) &&
        Objects.equals(this.successor, baseDescription.successor) &&
        Objects.equals(this.commentsCount, baseDescription.commentsCount) &&
        Objects.equals(this.content, baseDescription.content) &&
        Objects.equals(this.deleted, baseDescription.deleted) &&
        Objects.equals(this.recommended, baseDescription.recommended) &&
        Objects.equals(this._public, baseDescription._public) &&
        Objects.equals(this.id, baseDescription.id) &&
        Objects.equals(this.showInEditor, baseDescription.showInEditor) &&
        Objects.equals(this.isPublic, baseDescription.isPublic);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dbId, name, description, registrationDate, creatorName, dbUserId, userId, domainName, href, groupName, status, derivedfrom, successor, commentsCount, content, deleted, recommended, _public, id, showInEditor, isPublic);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BaseDescription {\n");
    sb.append("    dbId: ").append(toIndentedString(dbId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    registrationDate: ").append(toIndentedString(registrationDate)).append("\n");
    sb.append("    creatorName: ").append(toIndentedString(creatorName)).append("\n");
    sb.append("    dbUserId: ").append(toIndentedString(dbUserId)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    domainName: ").append(toIndentedString(domainName)).append("\n");
    sb.append("    href: ").append(toIndentedString(href)).append("\n");
    sb.append("    groupName: ").append(toIndentedString(groupName)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    derivedfrom: ").append(toIndentedString(derivedfrom)).append("\n");
    sb.append("    successor: ").append(toIndentedString(successor)).append("\n");
    sb.append("    commentsCount: ").append(toIndentedString(commentsCount)).append("\n");
    sb.append("    content: ").append(toIndentedString(content)).append("\n");
    sb.append("    deleted: ").append(toIndentedString(deleted)).append("\n");
    sb.append("    recommended: ").append(toIndentedString(recommended)).append("\n");
    sb.append("    _public: ").append(toIndentedString(_public)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    showInEditor: ").append(toIndentedString(showInEditor)).append("\n");
    sb.append("    isPublic: ").append(toIndentedString(isPublic)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

