/*
 * Component Registry API
 * Components and profiles registry for the Component Metadata Infrastructure
 *
 * The version of the OpenAPI document: 1.0
 * Contact: cmdi@clarin.eu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package eu.clarin.cmdi.componentregistry.openapi.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import eu.clarin.cmdi.componentregistry.openapi.client.model.EnumerationType;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.dataformat.xml.annotation.*;
import jakarta.xml.bind.annotation.*;
import jakarta.xml.bind.annotation.adapters.*;
import io.github.threetenjaxb.core.*;

/**
 * VocabularyType
 */
@JsonPropertyOrder({
  VocabularyType.JSON_PROPERTY_ENUMERATION,
  VocabularyType.JSON_PROPERTY_URI,
  VocabularyType.JSON_PROPERTY_VALUE_PROPERTY,
  VocabularyType.JSON_PROPERTY_VALUE_LANGUAGE
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-24T11:08:44.298260+02:00[Europe/Amsterdam]", comments = "Generator version: 7.8.0")
@XmlRootElement(name = "VocabularyType")
@XmlAccessorType(XmlAccessType.FIELD)
@JacksonXmlRootElement(localName = "VocabularyType")
public class VocabularyType {
  public static final String JSON_PROPERTY_ENUMERATION = "enumeration";
  @XmlElement(name = "enumeration")
  private EnumerationType enumeration;

  public static final String JSON_PROPERTY_URI = "uri";
  @XmlAttribute(name = "URI")
  private String uri;

  public static final String JSON_PROPERTY_VALUE_PROPERTY = "valueProperty";
  @XmlAttribute(name = "ValueProperty")
  private String valueProperty;

  public static final String JSON_PROPERTY_VALUE_LANGUAGE = "valueLanguage";
  @XmlAttribute(name = "ValueLanguage")
  private String valueLanguage;

  public VocabularyType() {
  }

  public VocabularyType enumeration(EnumerationType enumeration) {
    
    this.enumeration = enumeration;
    return this;
  }

  /**
   * Get enumeration
   * @return enumeration
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ENUMERATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "enumeration")

  public EnumerationType getEnumeration() {
    return enumeration;
  }


  @JsonProperty(JSON_PROPERTY_ENUMERATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "enumeration")
  public void setEnumeration(EnumerationType enumeration) {
    this.enumeration = enumeration;
  }

  public VocabularyType uri(String uri) {
    
    this.uri = uri;
    return this;
  }

  /**
   * Get uri
   * @return uri
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_URI)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "URI", isAttribute = true)

  public String getUri() {
    return uri;
  }


  @JsonProperty(JSON_PROPERTY_URI)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "URI", isAttribute = true)
  public void setUri(String uri) {
    this.uri = uri;
  }

  public VocabularyType valueProperty(String valueProperty) {
    
    this.valueProperty = valueProperty;
    return this;
  }

  /**
   * Get valueProperty
   * @return valueProperty
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VALUE_PROPERTY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "ValueProperty", isAttribute = true)

  public String getValueProperty() {
    return valueProperty;
  }


  @JsonProperty(JSON_PROPERTY_VALUE_PROPERTY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "ValueProperty", isAttribute = true)
  public void setValueProperty(String valueProperty) {
    this.valueProperty = valueProperty;
  }

  public VocabularyType valueLanguage(String valueLanguage) {
    
    this.valueLanguage = valueLanguage;
    return this;
  }

  /**
   * Get valueLanguage
   * @return valueLanguage
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VALUE_LANGUAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "ValueLanguage", isAttribute = true)

  public String getValueLanguage() {
    return valueLanguage;
  }


  @JsonProperty(JSON_PROPERTY_VALUE_LANGUAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "ValueLanguage", isAttribute = true)
  public void setValueLanguage(String valueLanguage) {
    this.valueLanguage = valueLanguage;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VocabularyType vocabularyType = (VocabularyType) o;
    return Objects.equals(this.enumeration, vocabularyType.enumeration) &&
        Objects.equals(this.uri, vocabularyType.uri) &&
        Objects.equals(this.valueProperty, vocabularyType.valueProperty) &&
        Objects.equals(this.valueLanguage, vocabularyType.valueLanguage);
  }

  @Override
  public int hashCode() {
    return Objects.hash(enumeration, uri, valueProperty, valueLanguage);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VocabularyType {\n");
    sb.append("    enumeration: ").append(toIndentedString(enumeration)).append("\n");
    sb.append("    uri: ").append(toIndentedString(uri)).append("\n");
    sb.append("    valueProperty: ").append(toIndentedString(valueProperty)).append("\n");
    sb.append("    valueLanguage: ").append(toIndentedString(valueLanguage)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

